!function(g){var I={};function n(t){if(I[t])return I[t].exports;var C=I[t]={i:t,l:!1,exports:{}};return g[t].call(C.exports,C,C.exports,n),C.l=!0,C.exports}n.m=g,n.c=I,n.d=function(g,I,t){n.o(g,I)||Object.defineProperty(g,I,{enumerable:!0,get:t})},n.r=function(g){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(g,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(g,"__esModule",{value:!0})},n.t=function(g,I){if(1&I&&(g=n(g)),8&I)return g;if(4&I&&"object"==typeof g&&g&&g.__esModule)return g;var t=Object.create(null);if(n.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:g}),2&I&&"string"!=typeof g)for(var C in g)n.d(t,C,function(I){return g[I]}.bind(null,C));return t},n.n=function(g){var I=g&&g.__esModule?function(){return g.default}:function(){return g};return n.d(I,"a",I),I},n.o=function(g,I){return Object.prototype.hasOwnProperty.call(g,I)},n.p="",n(n.s=7)}([function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return common; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return STAGEGROUP; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return BLOCKTYPE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return BLOCKCONFIG; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return BOTTLECONFIG; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return STATUS; });\n/* unused harmony export COLOR */\nconst common = {\n  canvas: null,\n  width: 300,\n  height: 300,\n  aspect: 1,\n  gravity: 700\n};\nconst STAGEGROUP = {\n  GAMEOVER: "game-over",\n  GAMEMAIN: "game-main"\n};\nconst BLOCKTYPE = {\n  CUBOID: "cuboid",\n  CYLINDER: "cylinder"\n};\nconst BLOCKCONFIG = {\n  width: 16,\n  height: 12\n};\nconst BOTTLECONFIG = {\n  x: -15,\n  y: 0,\n  z: 0\n};\nconst STATUS = {\n  "STOP": "stop",\n  "SKRINK": "shrink",\n  "JUMPUP": "jump_up",\n  "JUMPDOWN": "jump_down",\n  "FORERAKE": "forerake",\n  "HYPSOKINESIS": "hypsokinesis",\n  "FALL": "fall"\n};\nconst COLOR = [0x329ffc, 0x9fcf1f, 0xf44f3c, 0xffcf00];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy91dGlscy9jb21tb24uanM/Y2Y0NSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgY29tbW9uID0ge1xyXG4gICAgY2FudmFzOiBudWxsLFxyXG4gICAgd2lkdGg6IDMwMCxcclxuICAgIGhlaWdodDogMzAwLFxyXG4gICAgYXNwZWN0OiAxLFxyXG4gICAgZ3Jhdml0eTogNzAwXHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBTVEFHRUdST1VQID0ge1xyXG4gICAgR0FNRU9WRVI6IFwiZ2FtZS1vdmVyXCIsXHJcbiAgICBHQU1FTUFJTjogXCJnYW1lLW1haW5cIlxyXG59XHJcblxyXG5leHBvcnQgY29uc3QgQkxPQ0tUWVBFID0ge1xyXG4gICAgQ1VCT0lEOiBcImN1Ym9pZFwiLFxyXG4gICAgQ1lMSU5ERVI6IFwiY3lsaW5kZXJcIlxyXG59XHJcblxyXG5leHBvcnQgY29uc3QgQkxPQ0tDT05GSUcgPSB7XHJcbiAgICB3aWR0aDogMTYsXHJcbiAgICBoZWlnaHQ6IDEyXHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBCT1RUTEVDT05GSUcgPSB7XHJcbiAgICB4OiAtMTUsXHJcbiAgICB5OiAwLFxyXG4gICAgejogMCxcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IFNUQVRVUyA9IHtcclxuICAgIFwiU1RPUFwiOiBcInN0b3BcIixcclxuICAgIFwiU0tSSU5LXCI6IFwic2hyaW5rXCIsXHJcbiAgICBcIkpVTVBVUFwiOiBcImp1bXBfdXBcIixcclxuICAgIFwiSlVNUERPV05cIjogXCJqdW1wX2Rvd25cIixcclxuICAgIFwiRk9SRVJBS0VcIjpcImZvcmVyYWtlXCIsXHJcbiAgICBcIkhZUFNPS0lORVNJU1wiOlwiaHlwc29raW5lc2lzXCIsXHJcbiAgICBcIkZBTExcIjpcImZhbGxcIlxyXG59XHJcblxyXG5leHBvcnQgY29uc3QgQ09MT1IgPSBbMHgzMjlmZmMsIDB4OWZjZjFmLCAweGY0NGYzYywgMHhmZmNmMDBdIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUxBO0FBUUE7QUFDQTtBQUNBO0FBRkE7QUFLQTtBQUNBO0FBQ0E7QUFGQTtBQUtBO0FBQ0E7QUFDQTtBQUZBO0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFIQTtBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFQQTtBQVVBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///0\n')},,,function(module,exports,__webpack_require__){eval("var content = __webpack_require__(4);\n\nif (typeof content === 'string') {\n  content = [[module.i, content, '']];\n}\n\nvar options = {}\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = __webpack_require__(6)(content, options);\n\nif (content.locals) {\n  module.exports = content.locals;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3B1YmxpYy9jc3Mvc3R5bGUuY3NzPzFkNWEiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiKTtcblxuaWYgKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykge1xuICBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG59XG5cbnZhciBvcHRpb25zID0ge31cblxub3B0aW9ucy5pbnNlcnQgPSBcImhlYWRcIjtcbm9wdGlvbnMuc2luZ2xldG9uID0gZmFsc2U7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYgKGNvbnRlbnQubG9jYWxzKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG59XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///3\n")},function(module,exports,__webpack_require__){eval('exports = module.exports = __webpack_require__(5)(false);\n// Module\nexports.push([module.i, "* {\\r\\n    padding  : 0;\\r\\n    margin   : 0;\\r\\n    font-size: 14px;\\r\\n}\\r\\n\\r\\nhtml,\\r\\nbody,\\r\\n#app {\\r\\n    width : 100%;\\r\\n    height: 100%;\\r\\n}\\r\\n\\r\\nbody {\\r\\n    background: #333333;\\r\\n}\\r\\n#app{\\r\\n    box-sizing: border-box;\\r\\n}\\r\\ncanvas {\\r\\n    background: #ffffff;\\r\\n    display: block;\\r\\n    margin: 0 auto;\\r\\n}", ""]);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3B1YmxpYy9jc3Mvc3R5bGUuY3NzPzg1MmEiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIikoZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIqIHtcXHJcXG4gICAgcGFkZGluZyAgOiAwO1xcclxcbiAgICBtYXJnaW4gICA6IDA7XFxyXFxuICAgIGZvbnQtc2l6ZTogMTRweDtcXHJcXG59XFxyXFxuXFxyXFxuaHRtbCxcXHJcXG5ib2R5LFxcclxcbiNhcHAge1xcclxcbiAgICB3aWR0aCA6IDEwMCU7XFxyXFxuICAgIGhlaWdodDogMTAwJTtcXHJcXG59XFxyXFxuXFxyXFxuYm9keSB7XFxyXFxuICAgIGJhY2tncm91bmQ6ICMzMzMzMzM7XFxyXFxufVxcclxcbiNhcHB7XFxyXFxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxyXFxufVxcclxcbmNhbnZhcyB7XFxyXFxuICAgIGJhY2tncm91bmQ6ICNmZmZmZmY7XFxyXFxuICAgIGRpc3BsYXk6IGJsb2NrO1xcclxcbiAgICBtYXJnaW46IDAgYXV0bztcXHJcXG59XCIsIFwiXCJdKTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///4\n')},function(module,exports,__webpack_require__){"use strict";eval('\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return "@media ".concat(item[2], "{").concat(content, "}");\n      }\n\n      return content;\n    }).join(\'\');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery) {\n    if (typeof modules === \'string\') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, \'\']];\n    }\n\n    var alreadyImportedModules = {};\n\n    for (var i = 0; i < this.length; i++) {\n      // eslint-disable-next-line prefer-destructuring\n      var id = this[i][0];\n\n      if (id != null) {\n        alreadyImportedModules[id] = true;\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = modules[_i]; // skip already imported module\n      // this implementation is not 100% perfect for weird media query combinations\n      // when a module is imported multiple times with different media queries.\n      // I hope this will never occur (Hey this way we have smaller bundles)\n\n      if (item[0] == null || !alreadyImportedModules[item[0]]) {\n        if (mediaQuery && !item[2]) {\n          item[2] = mediaQuery;\n        } else if (mediaQuery) {\n          item[2] = "(".concat(item[2], ") and (").concat(mediaQuery, ")");\n        }\n\n        list.push(item);\n      }\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || \'\'; // eslint-disable-next-line prefer-destructuring\n\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === \'function\') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return "/*# sourceURL=".concat(cssMapping.sourceRoot).concat(source, " */");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join(\'\\n\');\n  }\n\n  return [content].join(\'\\n\');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64);\n  return "/*# ".concat(data, " */");\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanM/MjRmYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbi8vIGNzcyBiYXNlIGNvZGUsIGluamVjdGVkIGJ5IHRoZSBjc3MtbG9hZGVyXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAodXNlU291cmNlTWFwKSB7XG4gIHZhciBsaXN0ID0gW107IC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcblxuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSwgdXNlU291cmNlTWFwKTtcblxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgcmV0dXJuIFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIntcIikuY29uY2F0KGNvbnRlbnQsIFwifVwiKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbignJyk7XG4gIH07IC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBmdW5jLW5hbWVzXG5cblxuICBsaXN0LmkgPSBmdW5jdGlvbiAobW9kdWxlcywgbWVkaWFRdWVyeSkge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gJ3N0cmluZycpIHtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wYXJhbS1yZWFzc2lnblxuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgJyddXTtcbiAgICB9XG5cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcHJlZmVyLWRlc3RydWN0dXJpbmdcbiAgICAgIHZhciBpZCA9IHRoaXNbaV1bMF07XG5cbiAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbW9kdWxlcy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBpdGVtID0gbW9kdWxlc1tfaV07IC8vIHNraXAgYWxyZWFkeSBpbXBvcnRlZCBtb2R1bGVcbiAgICAgIC8vIHRoaXMgaW1wbGVtZW50YXRpb24gaXMgbm90IDEwMCUgcGVyZmVjdCBmb3Igd2VpcmQgbWVkaWEgcXVlcnkgY29tYmluYXRpb25zXG4gICAgICAvLyB3aGVuIGEgbW9kdWxlIGlzIGltcG9ydGVkIG11bHRpcGxlIHRpbWVzIHdpdGggZGlmZmVyZW50IG1lZGlhIHF1ZXJpZXMuXG4gICAgICAvLyBJIGhvcGUgdGhpcyB3aWxsIG5ldmVyIG9jY3VyIChIZXkgdGhpcyB3YXkgd2UgaGF2ZSBzbWFsbGVyIGJ1bmRsZXMpXG5cbiAgICAgIGlmIChpdGVtWzBdID09IG51bGwgfHwgIWFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcbiAgICAgICAgaWYgKG1lZGlhUXVlcnkgJiYgIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWFRdWVyeTtcbiAgICAgICAgfSBlbHNlIGlmIChtZWRpYVF1ZXJ5KSB7XG4gICAgICAgICAgaXRlbVsyXSA9IFwiKFwiLmNvbmNhdChpdGVtWzJdLCBcIikgYW5kIChcIikuY29uY2F0KG1lZGlhUXVlcnksIFwiKVwiKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICAgIH1cbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIGxpc3Q7XG59O1xuXG5mdW5jdGlvbiBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0sIHVzZVNvdXJjZU1hcCkge1xuICB2YXIgY29udGVudCA9IGl0ZW1bMV0gfHwgJyc7IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBwcmVmZXItZGVzdHJ1Y3R1cmluZ1xuXG4gIHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcblxuICBpZiAoIWNzc01hcHBpbmcpIHtcbiAgICByZXR1cm4gY29udGVudDtcbiAgfVxuXG4gIGlmICh1c2VTb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgPT09ICdmdW5jdGlvbicpIHtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IHRvQ29tbWVudChjc3NNYXBwaW5nKTtcbiAgICB2YXIgc291cmNlVVJMcyA9IGNzc01hcHBpbmcuc291cmNlcy5tYXAoZnVuY3Rpb24gKHNvdXJjZSkge1xuICAgICAgcmV0dXJuIFwiLyojIHNvdXJjZVVSTD1cIi5jb25jYXQoY3NzTWFwcGluZy5zb3VyY2VSb290KS5jb25jYXQoc291cmNlLCBcIiAqL1wiKTtcbiAgICB9KTtcbiAgICByZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChzb3VyY2VVUkxzKS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKCdcXG4nKTtcbiAgfVxuXG4gIHJldHVybiBbY29udGVudF0uam9pbignXFxuJyk7XG59IC8vIEFkYXB0ZWQgZnJvbSBjb252ZXJ0LXNvdXJjZS1tYXAgKE1JVClcblxuXG5mdW5jdGlvbiB0b0NvbW1lbnQoc291cmNlTWFwKSB7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlZlxuICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKTtcbiAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICByZXR1cm4gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xufSJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///5\n')},function(module,exports,__webpack_require__){"use strict";eval("\n\nvar stylesInDom = {};\n\nvar isOldIE = function isOldIE() {\n  var memo;\n  return function memorize() {\n    if (typeof memo === 'undefined') {\n      // Test for IE <= 9 as proposed by Browserhacks\n      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n      // Tests for existence of standard globals is to allow style-loader\n      // to operate correctly into non-standard environments\n      // @see https://github.com/webpack-contrib/style-loader/issues/177\n      memo = Boolean(window && document && document.all && !window.atob);\n    }\n\n    return memo;\n  };\n}();\n\nvar getTarget = function getTarget() {\n  var memo = {};\n  return function memorize(target) {\n    if (typeof memo[target] === 'undefined') {\n      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n        try {\n          // This will throw an exception if access to iframe is blocked\n          // due to cross-origin restrictions\n          styleTarget = styleTarget.contentDocument.head;\n        } catch (e) {\n          // istanbul ignore next\n          styleTarget = null;\n        }\n      }\n\n      memo[target] = styleTarget;\n    }\n\n    return memo[target];\n  };\n}();\n\nfunction listToStyles(list, options) {\n  var styles = [];\n  var newStyles = {};\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var css = item[1];\n    var media = item[2];\n    var sourceMap = item[3];\n    var part = {\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    };\n\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = {\n        id: id,\n        parts: [part]\n      });\n    } else {\n      newStyles[id].parts.push(part);\n    }\n  }\n\n  return styles;\n}\n\nfunction addStylesToDom(styles, options) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i];\n    var domStyle = stylesInDom[item.id];\n    var j = 0;\n\n    if (domStyle) {\n      domStyle.refs++;\n\n      for (; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j]);\n      }\n\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j], options));\n      }\n    } else {\n      var parts = [];\n\n      for (; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j], options));\n      }\n\n      stylesInDom[item.id] = {\n        id: item.id,\n        refs: 1,\n        parts: parts\n      };\n    }\n  }\n}\n\nfunction insertStyleElement(options) {\n  var style = document.createElement('style');\n\n  if (typeof options.attributes.nonce === 'undefined') {\n    var nonce =  true ? __webpack_require__.nc : undefined;\n\n    if (nonce) {\n      options.attributes.nonce = nonce;\n    }\n  }\n\n  Object.keys(options.attributes).forEach(function (key) {\n    style.setAttribute(key, options.attributes[key]);\n  });\n\n  if (typeof options.insert === 'function') {\n    options.insert(style);\n  } else {\n    var target = getTarget(options.insert || 'head');\n\n    if (!target) {\n      throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n    }\n\n    target.appendChild(style);\n  }\n\n  return style;\n}\n\nfunction removeStyleElement(style) {\n  // istanbul ignore if\n  if (style.parentNode === null) {\n    return false;\n  }\n\n  style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */\n\n\nvar replaceText = function replaceText() {\n  var textStore = [];\n  return function replace(index, replacement) {\n    textStore[index] = replacement;\n    return textStore.filter(Boolean).join('\\n');\n  };\n}();\n\nfunction applyToSingletonTag(style, index, remove, obj) {\n  var css = remove ? '' : obj.css; // For old IE\n\n  /* istanbul ignore if  */\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = replaceText(index, css);\n  } else {\n    var cssNode = document.createTextNode(css);\n    var childNodes = style.childNodes;\n\n    if (childNodes[index]) {\n      style.removeChild(childNodes[index]);\n    }\n\n    if (childNodes.length) {\n      style.insertBefore(cssNode, childNodes[index]);\n    } else {\n      style.appendChild(cssNode);\n    }\n  }\n}\n\nfunction applyToTag(style, options, obj) {\n  var css = obj.css;\n  var media = obj.media;\n  var sourceMap = obj.sourceMap;\n\n  if (media) {\n    style.setAttribute('media', media);\n  }\n\n  if (sourceMap && btoa) {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    while (style.firstChild) {\n      style.removeChild(style.firstChild);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar singleton = null;\nvar singletonCounter = 0;\n\nfunction addStyle(obj, options) {\n  var style;\n  var update;\n  var remove;\n\n  if (options.singleton) {\n    var styleIndex = singletonCounter++;\n    style = singleton || (singleton = insertStyleElement(options));\n    update = applyToSingletonTag.bind(null, style, styleIndex, false);\n    remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n  } else {\n    style = insertStyleElement(options);\n    update = applyToTag.bind(null, style, options);\n\n    remove = function remove() {\n      removeStyleElement(style);\n    };\n  }\n\n  update(obj);\n  return function updateStyle(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n        return;\n      }\n\n      update(obj = newObj);\n    } else {\n      remove();\n    }\n  };\n}\n\nmodule.exports = function (list, options) {\n  options = options || {};\n  options.attributes = typeof options.attributes === 'object' ? options.attributes : {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n  // tags it will allow on a page\n\n  if (!options.singleton && typeof options.singleton !== 'boolean') {\n    options.singleton = isOldIE();\n  }\n\n  var styles = listToStyles(list, options);\n  addStylesToDom(styles, options);\n  return function update(newList) {\n    var mayRemove = [];\n\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i];\n      var domStyle = stylesInDom[item.id];\n\n      if (domStyle) {\n        domStyle.refs--;\n        mayRemove.push(domStyle);\n      }\n    }\n\n    if (newList) {\n      var newStyles = listToStyles(newList, options);\n      addStylesToDom(newStyles, options);\n    }\n\n    for (var _i = 0; _i < mayRemove.length; _i++) {\n      var _domStyle = mayRemove[_i];\n\n      if (_domStyle.refs === 0) {\n        for (var j = 0; j < _domStyle.parts.length; j++) {\n          _domStyle.parts[j]();\n        }\n\n        delete stylesInDom[_domStyle.id];\n      }\n    }\n  };\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///6\n")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./public/css/style.css\nvar style = __webpack_require__(3);\n\n// CONCATENATED MODULE: ./src/utils/event.js\nclass Event {\n  constructor(sender) {\n    this._sender = sender;\n    this._listeners = [];\n  }\n\n  attach(callback = null) {\n    if (callback == null) return;\n\n    this._listeners.push(callback);\n  }\n\n  notify(args) {\n    this._listeners.map(item => {\n      item(this._sender, args);\n    });\n  }\n\n}\n// CONCATENATED MODULE: ./src/game/model.js\n\n\nclass model_GameModel {\n  constructor() {\n    this.stage = "";\n    this.changeStage = new Event(this);\n  }\n\n  getStage() {\n    return this.stage;\n  }\n\n  setStage(stage) {\n    this.stage = stage;\n    this.changeStage.notify({\n      stage\n    });\n  }\n\n}\n\n/* harmony default export */ var model = (new model_GameModel());\n// EXTERNAL MODULE: ./src/utils/common.js\nvar common = __webpack_require__(0);\n\n// CONCATENATED MODULE: ./src/utils/tween.js\nvar Tween = {\n  Linear: function Linear(t, b, c, d) {\n    return c * t / d + b;\n  },\n  Quad: {\n    easeIn: function easeIn(t, b, c, d) {\n      return c * (t /= d) * t + b;\n    },\n    easeOut: function easeOut(t, b, c, d) {\n      return -c * (t /= d) * (t - 2) + b;\n    },\n    easeInOut: function easeInOut(t, b, c, d) {\n      if ((t /= d / 2) < 1) return c / 2 * t * t + b;\n      return -c / 2 * (--t * (t - 2) - 1) + b;\n    }\n  },\n  Cubic: {\n    easeIn: function easeIn(t, b, c, d) {\n      return c * (t /= d) * t * t + b;\n    },\n    easeOut: function easeOut(t, b, c, d) {\n      return c * ((t = t / d - 1) * t * t + 1) + b;\n    },\n    easeInOut: function easeInOut(t, b, c, d) {\n      if ((t /= d / 2) < 1) return c / 2 * t * t * t + b;\n      return c / 2 * ((t -= 2) * t * t + 2) + b;\n    }\n  },\n  Quart: {\n    easeIn: function easeIn(t, b, c, d) {\n      return c * (t /= d) * t * t * t + b;\n    },\n    easeOut: function easeOut(t, b, c, d) {\n      return -c * ((t = t / d - 1) * t * t * t - 1) + b;\n    },\n    easeInOut: function easeInOut(t, b, c, d) {\n      if ((t /= d / 2) < 1) return c / 2 * t * t * t * t + b;\n      return -c / 2 * ((t -= 2) * t * t * t - 2) + b;\n    }\n  },\n  Quint: {\n    easeIn: function easeIn(t, b, c, d) {\n      return c * (t /= d) * t * t * t * t + b;\n    },\n    easeOut: function easeOut(t, b, c, d) {\n      return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n    },\n    easeInOut: function easeInOut(t, b, c, d) {\n      if ((t /= d / 2) < 1) return c / 2 * t * t * t * t * t + b;\n      return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\n    }\n  },\n  Sine: {\n    easeIn: function easeIn(t, b, c, d) {\n      return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;\n    },\n    easeOut: function easeOut(t, b, c, d) {\n      return c * Math.sin(t / d * (Math.PI / 2)) + b;\n    },\n    easeInOut: function easeInOut(t, b, c, d) {\n      return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;\n    }\n  },\n  Expo: {\n    easeIn: function easeIn(t, b, c, d) {\n      return t == 0 ? b : c * Math.pow(2, 10 * (t / d - 1)) + b;\n    },\n    easeOut: function easeOut(t, b, c, d) {\n      return t == d ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;\n    },\n    easeInOut: function easeInOut(t, b, c, d) {\n      if (t == 0) return b;\n      if (t == d) return b + c;\n      if ((t /= d / 2) < 1) return c / 2 * Math.pow(2, 10 * (t - 1)) + b;\n      return c / 2 * (-Math.pow(2, -10 * --t) + 2) + b;\n    }\n  },\n  Circ: {\n    easeIn: function easeIn(t, b, c, d) {\n      return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\n    },\n    easeOut: function easeOut(t, b, c, d) {\n      return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\n    },\n    easeInOut: function easeInOut(t, b, c, d) {\n      if ((t /= d / 2) < 1) return -c / 2 * (Math.sqrt(1 - t * t) - 1) + b;\n      return c / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\n    }\n  },\n  Elastic: {\n    easeIn: function easeIn(t, b, c, d, a, p) {\n      var s;\n      if (t == 0) return b;\n      if ((t /= d) == 1) return b + c;\n      if (typeof p == "undefined") p = d * .3;\n\n      if (!a || a < Math.abs(c)) {\n        s = p / 4;\n        a = c;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(c / a);\n      }\n\n      return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p)) + b;\n    },\n    easeOut: function easeOut(t, b, c, d, a, p) {\n      var s;\n      if (t == 0) return b;\n      if ((t /= d) == 1) return b + c;\n      if (typeof p == "undefined") p = d * .3;\n\n      if (!a || a < Math.abs(c)) {\n        a = c;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(c / a);\n      }\n\n      return a * Math.pow(2, -10 * t) * Math.sin((t * d - s) * (2 * Math.PI) / p) + c + b;\n    },\n    easeInOut: function easeInOut(t, b, c, d, a, p) {\n      var s;\n      if (t == 0) return b;\n      if ((t /= d / 2) == 2) return b + c;\n      if (typeof p == "undefined") p = d * (.3 * 1.5);\n\n      if (!a || a < Math.abs(c)) {\n        a = c;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(c / a);\n      }\n\n      if (t < 1) return -.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p)) + b;\n      return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p) * .5 + c + b;\n    }\n  },\n  Back: {\n    easeIn: function easeIn(t, b, c, d, s) {\n      if (typeof s == "undefined") s = 1.70158;\n      return c * (t /= d) * t * ((s + 1) * t - s) + b;\n    },\n    easeOut: function easeOut(t, b, c, d, s) {\n      if (typeof s == "undefined") s = 1.70158;\n      return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n    },\n    easeInOut: function easeInOut(t, b, c, d, s) {\n      if (typeof s == "undefined") s = 1.70158;\n      if ((t /= d / 2) < 1) return c / 2 * (t * t * (((s *= 1.525) + 1) * t - s)) + b;\n      return c / 2 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2) + b;\n    }\n  },\n  Bounce: {\n    easeIn: function easeIn(t, b, c, d) {\n      return c - Tween.Bounce.easeOut(d - t, 0, c, d) + b;\n    },\n    easeOut: function easeOut(t, b, c, d) {\n      if ((t /= d) < 1 / 2.75) {\n        return c * (7.5625 * t * t) + b;\n      } else if (t < 2 / 2.75) {\n        return c * (7.5625 * (t -= 1.5 / 2.75) * t + .75) + b;\n      } else if (t < 2.5 / 2.75) {\n        return c * (7.5625 * (t -= 2.25 / 2.75) * t + .9375) + b;\n      } else {\n        return c * (7.5625 * (t -= 2.625 / 2.75) * t + .984375) + b;\n      }\n    },\n    easeInOut: function easeInOut(t, b, c, d) {\n      if (t < d / 2) {\n        return Tween.Bounce.easeIn(t * 2, 0, c, d) * .5 + b;\n      } else {\n        return Tween.Bounce.easeOut(t * 2 - d, 0, c, d) * .5 + c * .5 + b;\n      }\n    }\n  }\n};\n/* harmony default export */ var utils_tween = (Tween);\n// CONCATENATED MODULE: ./src/utils/animation.js\n\nvar animationId = -1;\nvar killAnimationId = animationId - 1;\nvar _customAnimation = {};\n\n_customAnimation.to = function (obj, duration, options) {\n  duration *= 1000;\n  var delay = options.delay || 0;\n\n  for (var name in options) {\n    if (name === \'delay\') {\n      delay = options[name];\n    } else if (name === \'onComplete\') {} else if (name === \'ease\') {} else {\n      setTimeout(function (name) {\n        return function () {\n          animation_TweenAnimation(obj[name], options[name], duration, options.ease || \'Linear\', function (value, complete) {\n            // Special handling for material opacity\n            if (name === \'opacity\' && obj.material) {\n              obj.material.transparent = true;\n              obj.material.opacity = Math.max(0, Math.min(1, value));\n            } else {\n              obj[name] = value;\n            }\n\n            if (complete) {\n              options.onComplete && options.onComplete();\n            }\n          });\n        };\n      }(name), delay * 1000);\n    }\n  }\n}; // 对运动方法进行封装\n\n\nvar _TweenAnimation = function TweenAnimation(from, to, duration, easing, callback) {\n  var selfAnimationId = ++animationId;\n\n  var isUndefined = function isUndefined(obj) {\n    return typeof obj == \'undefined\';\n  };\n\n  var isFunction = function isFunction(obj) {\n    return typeof obj == \'function\';\n  };\n\n  var isNumber = function isNumber(obj) {\n    return typeof obj == \'number\';\n  };\n\n  var isString = function isString(obj) {\n    return typeof obj == \'string\';\n  }; // 转换成毫秒\n\n\n  var toMillisecond = function toMillisecond(obj) {\n    if (isNumber(obj)) {\n      return obj;\n    } else if (isString(obj)) {\n      if (/\\d+m?s$/.test(obj)) {\n        if (/ms/.test(obj)) {\n          return 1 * obj.replace(\'ms\', \'\');\n        }\n\n        return 1000 * obj.replace(\'s\', \'\');\n      } else if (/^\\d+$/.test(obj)) {\n        return +obj;\n      }\n    }\n\n    return -1;\n  };\n\n  if (!isNumber(from) || !isNumber(to)) {\n    if (window.console) {\n      console.error(\'from和to两个参数必须且为数值\');\n    }\n\n    return 0;\n  } // 缓动算法\n\n\n  var tween = utils_tween;\n\n  if (!tween) {\n    if (window.console) {\n      console.error(\'缓动算法函数缺失\');\n    }\n\n    return 0;\n  } // duration, easing, callback均为可选参数\n  // 而且顺序可以任意\n\n\n  var options = {\n    duration: 300,\n    easing: \'Linear\',\n    callback: function callback() {}\n  };\n\n  var setOptions = function setOptions(obj) {\n    if (isFunction(obj)) {\n      options.callback = obj;\n    } else if (toMillisecond(obj) != -1) {\n      options.duration = toMillisecond(obj);\n    } else if (isString(obj)) {\n      options.easing = obj;\n    }\n  };\n\n  setOptions(duration);\n  setOptions(easing);\n  setOptions(callback); // requestAnimationFrame的兼容处理\n\n  if (!window.requestAnimationFrame) {\n    requestAnimationFrame = function requestAnimationFrame(fn) {\n      setTimeout(fn, 16.7);\n    };\n  } // 算法需要的几个变量\n\n\n  var start = -1; // during根据设置的总时间计算\n\n  var during = Math.ceil(options.duration / 16.7); // 当前动画算法\n  // 确保首字母大写\n\n  options.easing = options.easing.slice(0, 1).toUpperCase() + options.easing.slice(1);\n  var arrKeyTween = options.easing.split(\'.\');\n  var fnGetValue;\n\n  if (arrKeyTween.length == 1) {\n    fnGetValue = tween[arrKeyTween[0]];\n  } else if (arrKeyTween.length == 2) {\n    fnGetValue = tween[arrKeyTween[0]] && tween[arrKeyTween[0]][arrKeyTween[1]];\n  }\n\n  if (isFunction(fnGetValue) == false) {\n    console.error(\'没有找到名为"\' + options.easing + \'"的动画算法\');\n    return;\n  }\n\n  var startTime = Date.now();\n  var lastTime = Date.now(); // 运动\n\n  var step = function step() {\n    var currentTime = Date.now();\n    var interval = currentTime - lastTime;\n\n    if (interval) {\n      var fps = Math.ceil(1000 / interval);\n    } else {\n      requestAnimationFrame(step);\n      return;\n    }\n\n    lastTime = currentTime;\n\n    if (interval > 100) {\n      requestAnimationFrame(step);\n      return;\n    }\n\n    if (fps >= 30) {\n      start++;\n    } else {\n      var _start = Math.floor((currentTime - startTime) / 16.7);\n\n      start = _start > start ? _start : start + 1;\n    } // 当前的运动位置\n\n\n    var value = fnGetValue(start, from, to - from, during); // 如果还没有运动到位，继续\n\n    if (start <= during && selfAnimationId > killAnimationId) {\n      options.callback(value);\n      requestAnimationFrame(step);\n    } else if (start > during && selfAnimationId > killAnimationId) {\n      // 动画结束，这里可以插入回调...\n      options.callback(to, true);\n    } else {}\n  }; // 开始执行动画\n\n\n  step();\n};\n\nvar _stopAllAnimation = () => {\n  killAnimationId = animationId;\n};\n\nconst customAnimation = _customAnimation;\nconst animation_TweenAnimation = _TweenAnimation;\nconst stopAllAnimation = _stopAllAnimation;\n// CONCATENATED MODULE: ./src/scene/camera.js\n\n\n\nclass camera_Camera {\n  constructor() {\n    this.instance = null;\n    this.frustumSize = 30;\n  }\n\n  init() {\n    const {\n      aspect\n    } = common["f" /* common */];\n    let frustumSize = this.frustumSize;\n    this.instance = new THREE.OrthographicCamera(-frustumSize, frustumSize, frustumSize * aspect, -frustumSize * aspect, -100, 85);\n    this.reset();\n    this.instance.lookAt(this.target);\n  }\n\n  reset() {\n    //-10,10,10\n    this.instance.position.set(-10, 10, 10);\n    this.target = new THREE.Vector3(0, 0, 0);\n  }\n\n  updatePosition(newTargetPosition) {\n    customAnimation.to(this.instance.position, 0.5, {\n      x: newTargetPosition.x - 10,\n      y: newTargetPosition.y + 10,\n      z: newTargetPosition.z + 10\n    });\n    customAnimation.to(this.target, 0.5, {\n      x: newTargetPosition.x,\n      y: newTargetPosition.y,\n      z: newTargetPosition.z\n    });\n  }\n\n}\n\n/* harmony default export */ var camera = (new camera_Camera());\n// CONCATENATED MODULE: ./src/scene/light.js\n\n\nclass light_Light {\n  constructor() {\n    this.instances = {};\n  }\n\n  init() {\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.8);\n    const shadowLight = new THREE.DirectionalLight(0xffffff, 0.3);\n    this.shadowLight = shadowLight; // const shadowLightHelper = new THREE.DirectionalLightHelper(shadowLight,5);\n    // this.instances.shadowLightHelper = shadowLightHelper;\n\n    shadowLight.position.set(10, 30, 20);\n    shadowLight.castShadow = true;\n    var basicMaterial = new THREE.MeshBasicMaterial({\n      color: 0xF5F5F5\n    });\n    this.shadowTarget = new THREE.Mesh(new THREE.PlaneGeometry(0.1, 0.1), basicMaterial);\n    this.shadowTarget.visible = false;\n    this.shadowTarget.name = \'shadowTarget\';\n    shadowLight.target = this.shadowTarget;\n    shadowLight.shadow.camera.near = 0.5;\n    shadowLight.shadow.camera.far = 500;\n    shadowLight.shadow.camera.left = -100;\n    shadowLight.shadow.camera.right = 100;\n    shadowLight.shadow.camera.top = 100;\n    shadowLight.shadow.camera.bottom = -100;\n    shadowLight.shadow.mapSize.width = 1024;\n    shadowLight.shadow.mapSize.height = 1024;\n    this.instances.shadowLight = shadowLight;\n    this.instances.ambientLight = ambientLight;\n    this.instances.shadowTarget = this.shadowTarget;\n  }\n\n  updatePosition(targetPosition) {\n    customAnimation.to(this.shadowTarget.position, 0.5, {\n      x: targetPosition.x,\n      y: targetPosition.y,\n      z: targetPosition.z\n    });\n    customAnimation.to(this.shadowLight.position, 0.5, {\n      x: 10 + targetPosition.x,\n      y: 30 + targetPosition.y,\n      z: 20 + targetPosition.z\n    });\n  }\n\n  reset() {\n    this.shadowLight.position.set(10, 30, 20);\n    this.shadowTarget.position.set(0, 0, 0);\n  }\n\n}\n\n/* harmony default export */ var light = (new light_Light());\n// CONCATENATED MODULE: ./src/part/background.js\n\n\n\nclass background_Background {\n  constructor() {\n    this.instance = null;\n    this.frustumSize = camera.frustumSize;\n  }\n\n  init() {\n    const {\n      width,\n      height\n    } = common["f" /* common */];\n    const geometry = new THREE.PlaneGeometry(this.frustumSize * 2, this.frustumSize * 2 * height / width);\n    const material = new THREE.MeshBasicMaterial({\n      color: 0xf5f5f5,\n      opacity: 1,\n      transparent: true\n    });\n    const mesh = new THREE.Mesh(geometry, material);\n    this.instance = mesh;\n  }\n\n}\n\n/* harmony default export */ var background = (new background_Background());\n// CONCATENATED MODULE: ./src/scene/index.js\n\n\n\n\n\nclass scene_Scene {\n  constructor() {\n    this.instance = null;\n  }\n\n  init() {\n    const {\n      width,\n      height,\n      canvas\n    } = common["f" /* common */];\n    this.renderer = new THREE.WebGLRenderer({\n      canvas,\n      antialias: true,\n      preserveDrawingBuffer: true\n    });\n    this.renderer.shadowMap.enabled = true;\n    this.renderer.shadowMap.type = THREE.PCFShadowMap; // this.renderer.setClearColor(new THREE.Color(0xffffff));\n\n    this.renderer.setSize(width, height);\n    this.instance = new THREE.Scene();\n    this.camera = camera;\n    this.camera.init();\n    this.light = light;\n    this.light.init(); // this.axesHelper = new THREE.AxesHelper(100);\n    // this.instance.add(this.axesHelper);\n\n    this.instance.add(this.camera.instance);\n\n    for (const key in this.light.instances) {\n      if (this.light.instances.hasOwnProperty(key)) {\n        this.instance.add(this.light.instances[key]);\n      }\n    }\n\n    this.background = background;\n    this.background.init();\n    this.background.instance.position.z = -84;\n    this.camera.instance.add(this.background.instance);\n  }\n\n  render() {\n    this.renderer.render(this.instance, this.camera.instance);\n  }\n\n  updateCameraPosition(targetPosition) {\n    this.camera.updatePosition(targetPosition);\n    this.light.updatePosition(targetPosition);\n  }\n\n  reset() {\n    this.camera.reset();\n    this.light.reset();\n  }\n\n  addScore(scoreInstance) {\n    this.currentScore = scoreInstance;\n    this.camera.instance.add(scoreInstance);\n    scoreInstance.position.x = -24;\n    scoreInstance.position.y = 35;\n  }\n\n  addLevel(levelInstance) {\n    this.currentLevel = levelInstance;\n    this.camera.instance.add(levelInstance);\n    levelInstance.position.x = -24;\n    levelInstance.position.y = 20;\n  }\n\n  updateScore(scoreInstance) {\n    this.camera.instance.remove(this.currentScore);\n    this.currentScore = scoreInstance;\n    this.camera.instance.add(scoreInstance);\n    scoreInstance.position.x = -24;\n    scoreInstance.position.y = 35;\n  }\n\n  updateLevel(levelInstance) {\n    this.camera.instance.remove(this.currentLevel);\n    this.currentLevel = levelInstance;\n    this.camera.instance.add(levelInstance);\n    levelInstance.position.x = -24;\n    levelInstance.position.y = 20;\n  }\n\n}\n\n/* harmony default export */ var src_scene = (new scene_Scene());\n// CONCATENATED MODULE: ./src/block/base.js\n\n\nclass base_BaseBlock {\n  constructor(type) {\n    this.type = type;\n    this.width = common["a" /* BLOCKCONFIG */].width;\n    this.height = common["a" /* BLOCKCONFIG */].height;\n    this.status = common["e" /* STATUS */].STOP;\n    this.scale = 1;\n  }\n\n  popup() {\n    this.instance.position.set(this.x, this.y + 30, this.z);\n    customAnimation.to(this.instance.position, 0.5, {\n      x: this.x,\n      y: this.y,\n      z: this.z,\n      ease: \'Bounce.easeOut\'\n    });\n  }\n\n  _shrink() {\n    const DELTA_SCALE = 0.005;\n    const MIN_SCALE = 0.55;\n    this.scale -= DELTA_SCALE;\n    this.scale = Math.max(MIN_SCALE, this.scale);\n\n    if (this.scale <= MIN_SCALE) {\n      this.status = common["e" /* STATUS */].STOP;\n      return;\n    }\n\n    this.instance.scale.y = this.scale;\n    const deltaY = this.height * DELTA_SCALE / 2;\n    this.instance.position.y -= deltaY;\n  }\n\n  rebound() {\n    this.status = common["e" /* STATUS */].STOP;\n    this.scale = 1;\n    customAnimation.to(this.instance.scale, 0.5, {\n      ease: \'Elastic.easeOut\',\n      y: 1\n    });\n    customAnimation.to(this.instance.position, 0.5, {\n      ease: \'Elastic.easeOut\',\n      y: 0\n    });\n  }\n\n  shrink() {\n    this.status = common["e" /* STATUS */].SKRINK;\n  }\n\n  update() {\n    if (this.status === common["e" /* STATUS */].SKRINK) {\n      this._shrink();\n    }\n  }\n\n  getVertices() {\n    const vertices = [];\n    const centerPosition = {\n      x: this.instance.position.x,\n      z: this.instance.position.z\n    };\n    vertices.push([centerPosition.x + this.width / 2, centerPosition.z + this.width / 2]);\n    vertices.push([centerPosition.x + this.width / 2, centerPosition.z - this.width / 2]);\n    vertices.push([centerPosition.x - this.width / 2, centerPosition.z + this.width / 2]);\n    vertices.push([centerPosition.x - this.width / 2, centerPosition.z - this.width / 2]);\n    return vertices;\n  }\n\n}\n// CONCATENATED MODULE: ./public/images/cube0/left.png\n/* harmony default export */ var left = (__webpack_require__.p + "images/left.1b73e375.png");\n// CONCATENATED MODULE: ./public/images/cube0/right.png\n/* harmony default export */ var right = (__webpack_require__.p + "images/right.09fb7813.png");\n// CONCATENATED MODULE: ./public/images/cube0/top.png\n/* harmony default export */ var cube0_top = (__webpack_require__.p + "images/top.45a81a87.png");\n// CONCATENATED MODULE: ./public/images/cube1/left.png\n/* harmony default export */ var cube1_left = (__webpack_require__.p + "images/left.30e8d3b6.png");\n// CONCATENATED MODULE: ./public/images/cube1/right.png\n/* harmony default export */ var cube1_right = (__webpack_require__.p + "images/right.95fb2a32.png");\n// CONCATENATED MODULE: ./public/images/cube1/top.png\n/* harmony default export */ var cube1_top = (__webpack_require__.p + "images/top.61de5cfd.png");\n// CONCATENATED MODULE: ./public/images/cube2/left.png\n/* harmony default export */ var cube2_left = (__webpack_require__.p + "images/left.fd0c30cc.png");\n// CONCATENATED MODULE: ./public/images/cube2/right.png\n/* harmony default export */ var cube2_right = (__webpack_require__.p + "images/right.241b5e45.png");\n// CONCATENATED MODULE: ./public/images/cube2/top.png\n/* harmony default export */ var cube2_top = (__webpack_require__.p + "images/top.094be0cd.png");\n// CONCATENATED MODULE: ./src/block/cuboid.js\n\n\n\n\n\n\n\n\n\n\n\nconst matFace = [{\n  left: left,\n  right: right,\n  top: cube0_top\n}, {\n  left: cube1_left,\n  right: cube1_right,\n  top: cube1_top\n}, {\n  left: cube2_left,\n  right: cube2_right,\n  top: cube2_top\n}];\nclass cuboid_CuboidBlock extends base_BaseBlock {\n  constructor(x = 0, y = 0, z = 0, type, matIndex = 0) {\n    super(common["b" /* BLOCKTYPE */].CUBOID);\n    this.name = "block";\n    this.instance = null;\n    let main_material;\n\n    if (true) {\n      const loader = new THREE.TextureLoader();\n      const mat_left = new THREE.MeshPhongMaterial({\n        map: loader.load(matFace[matIndex].left, texture => {\n          const aspect_left = texture.image.width / texture.image.height;\n          this.size = this.height * aspect_left;\n          const main_box_height = this.height;\n          const main_geometry = new THREE.BoxGeometry(this.size, main_box_height, this.size);\n          const bottom_mesh = new THREE.Mesh(main_geometry, main_material);\n          bottom_mesh.position.y = 0;\n          bottom_mesh.castShadow = true;\n          bottom_mesh.receiveShadow = true;\n          this.instance.add(bottom_mesh);\n        }),\n        transparent: true\n      });\n      const mat_right = new THREE.MeshPhongMaterial({\n        map: loader.load(matFace[matIndex].right),\n        transparent: true\n      });\n      const mat_top = new THREE.MeshPhongMaterial({\n        map: loader.load(matFace[matIndex].top),\n        transparent: true\n      });\n      main_material = [mat_left, mat_left, mat_top, mat_top, mat_right, mat_right];\n    } else {}\n\n    this.instance = new THREE.Object3D(); // 虽然没初始化，但是也要同步示例一个对象，否则会报错\n\n    this.instance.receiveShadow = true;\n    this.instance.castShadow = true;\n    this.instance.name = this.name;\n    this.x = this.instance.position.x = x;\n    this.y = this.instance.position.y = y;\n    this.z = this.instance.position.z = z;\n\n    if (type === \'popup\') {\n      this.popup();\n    } else if (type === \'show\') {\n      this.instance.position.x = this.x;\n      this.instance.position.y = this.y;\n      this.instance.position.z = this.z;\n    }\n  }\n\n}\n// CONCATENATED MODULE: ./public/images/cylinder0/round.png\n/* harmony default export */ var round = (__webpack_require__.p + "images/round.ec96b2bb.png");\n// CONCATENATED MODULE: ./public/images/cylinder0/top.png\n/* harmony default export */ var cylinder0_top = (__webpack_require__.p + "images/top.ac0bd8c6.png");\n// CONCATENATED MODULE: ./public/images/cylinder1/round.png\n/* harmony default export */ var cylinder1_round = (__webpack_require__.p + "images/round.e4c0061c.png");\n// CONCATENATED MODULE: ./public/images/cylinder1/top.png\n/* harmony default export */ var cylinder1_top = (__webpack_require__.p + "images/top.a2948c62.png");\n// CONCATENATED MODULE: ./public/images/cylinder2/round.png\n/* harmony default export */ var cylinder2_round = (__webpack_require__.p + "images/round.92041615.png");\n// CONCATENATED MODULE: ./public/images/cylinder2/top.png\n/* harmony default export */ var cylinder2_top = (__webpack_require__.p + "images/top.9c8f3861.png");\n// CONCATENATED MODULE: ./src/block/cylinder.js\n\n\n\n\n\n\n\n\nconst cylinder_matFace = [{\n  round: round,\n  top: cylinder0_top\n}, {\n  round: cylinder1_round,\n  top: cylinder1_top\n}, {\n  round: cylinder2_round,\n  top: cylinder2_top\n}];\nclass cylinder_CylinderBlock extends base_BaseBlock {\n  constructor(x = 0, y = 0, z = 0, type, matIndex = 0) {\n    super(common["b" /* BLOCKTYPE */].CYLINDER);\n    this.name = "block";\n    this.instance = null;\n    let main_material;\n\n    if (true) {\n      const loader = new THREE.TextureLoader();\n      const round_mat = new THREE.MeshPhongMaterial({\n        map: loader.load(cylinder_matFace[matIndex].round, texture => {\n          const main_box_height = this.height;\n          const aspect_ratio = texture.image.width / texture.image.height;\n          const round = this.height * aspect_ratio;\n          this.size = round / Math.PI; // diameter\n\n          const main_geometry = new THREE.CylinderGeometry(this.size / 2, this.size / 2, main_box_height, 100);\n          const bottom_mesh = new THREE.Mesh(main_geometry, main_material);\n          bottom_mesh.position.y = 0;\n          bottom_mesh.castShadow = true;\n          bottom_mesh.receiveShadow = true;\n          this.instance.add(bottom_mesh);\n        }),\n        transparent: true\n      });\n      const top_mat = new THREE.MeshPhongMaterial({\n        map: loader.load(cylinder_matFace[matIndex].top),\n        transparent: true\n      });\n      main_material = [round_mat, top_mat, top_mat];\n    } else {}\n\n    this.instance = new THREE.Object3D();\n    this.instance.receiveShadow = true;\n    this.instance.castShadow = true;\n    this.instance.name = this.name;\n    this.instance.rotation.y = Math.PI / 4;\n    this.x = this.instance.position.x = x;\n    this.y = this.instance.position.y = y;\n    this.z = this.instance.position.z = z;\n\n    if (type === \'popup\') {\n      this.popup();\n    } else if (type === \'show\') {\n      this.instance.position.x = this.x;\n      this.instance.position.y = this.y;\n      this.instance.position.z = this.z;\n    }\n  }\n\n}\n// CONCATENATED MODULE: ./src/part/ground.js\nclass Ground {\n  constructor() {\n    this.instance = null;\n  }\n\n  init() {\n    const geometry = new THREE.PlaneGeometry(200, 200);\n    const material = new THREE.ShadowMaterial({\n      transparent: true,\n      color: 0x000000,\n      opacity: 0.2\n    });\n    this.instance = new THREE.Mesh(geometry, material);\n    this.instance.rotation.x = -Math.PI / 2;\n    this.instance.position.y = -6;\n    this.instance.receiveShadow = true;\n  }\n\n  reset() {\n    this.instance.rotation.x = -Math.PI / 2;\n    this.instance.position.y = -6;\n    this.instance.position.x = 0;\n    this.instance.position.z = 0;\n  }\n\n  updatePosition(targetPosition) {\n    this.instance.position.x = targetPosition.x;\n    this.instance.position.z = targetPosition.z;\n  }\n\n}\n\n/* harmony default export */ var ground = (new Ground());\n// CONCATENATED MODULE: ./public/images/stand.png\n/* harmony default export */ var stand = (__webpack_require__.p + "images/stand.c86fbda4.png");\n// CONCATENATED MODULE: ./public/images/stoop.png\n/* harmony default export */ var stoop = (__webpack_require__.p + "images/stoop.f10c504b.png");\n// CONCATENATED MODULE: ./public/images/up.png\n/* harmony default export */ var up = (__webpack_require__.p + "images/up.717076f2.png");\n// CONCATENATED MODULE: ./public/images/down.png\n/* harmony default export */ var down = (__webpack_require__.p + "images/down.76e5cb76.png");\n// CONCATENATED MODULE: ./public/images/fall.png\n/* harmony default export */ var fall = (__webpack_require__.p + "images/fall.2cca5e8a.png");\n// CONCATENATED MODULE: ./src/part/bottle.js\n // import img_head from \'@images/head.png\';\n// import img_bottom from \'@images/bottom.png\';\n// import img_top from \'@images/top.png\';\n\n\n\n\n\n\n\n\n\nclass bottle_Bottle {\n  constructor() {\n    const {\n      x,\n      y,\n      z\n    } = common["c" /* BOTTLECONFIG */];\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.instance = null;\n    this.name = "bottle";\n    this.radius = 1.78;\n    this.depth = 10.24;\n    this.width = this.radius * 2;\n    this.blockHeight = common["a" /* BLOCKCONFIG */].height;\n    this.gravity = common["f" /* common */].gravity;\n    this.flyingTime = 0;\n    this.direction = 1;\n    this.axis = null;\n    this.status = \'\';\n    this.reset();\n    const loader = new THREE.TextureLoader();\n    this.standMat = loader.load(stand);\n    this.stoopMat = loader.load(stoop);\n    this.upMat = loader.load(up);\n    this.downMat = loader.load(down);\n    this.fallMat = loader.load(fall);\n  }\n\n  init() {\n    this.instance = new THREE.Object3D();\n    this.hero = new THREE.Object3D();\n    this.instance.name = this.name;\n    this.instance.position.set(this.x, this.y + 30, this.z);\n    this.instance.castShadow = true;\n    this.instance.receiveShadow = true; // 创建平面并加载纹理\n\n    const geometry = new THREE.PlaneGeometry(10, 10); // 调整尺寸\n\n    const material = new THREE.MeshStandardMaterial({\n      map: this.standMat,\n      transparent: true,\n      // 启用透明度（如果纹理有透明通道）\n      side: THREE.DoubleSide\n    });\n    this.body = new THREE.Mesh(geometry, material); // 设置阴影（Mesh 支持阴影）\n\n    this.body.castShadow = true;\n    this.body.receiveShadow = true;\n    this.body.position.y = 3.5;\n    this.body.rotation.y = -Math.PI / 4;\n    this.hero.add(this.body);\n    this.instance.add(this.hero);\n  }\n\n  createHead() {\n    const geometry = new THREE.IcosahedronGeometry(this.radius, 3);\n    const texture = new THREE.TextureLoader().load(img_head);\n    const material = new THREE.MeshPhongMaterial({\n      map: texture,\n      color: 0xffffff\n    });\n    return new THREE.Mesh(geometry, material);\n  }\n\n  createBottom() {\n    const geometry = new THREE.CylinderGeometry(this.radius * 0.78, this.radius * 1.17, this.radius * 2.1, 20);\n    const texture = new THREE.TextureLoader().load(img_bottom);\n    const material = new THREE.MeshPhongMaterial({\n      map: texture,\n      color: 0xffffff\n    });\n    return new THREE.Mesh(geometry, material);\n  }\n\n  createMiddle() {\n    const geometry = new THREE.CylinderGeometry(this.radius * 0.955, this.radius * 0.78, this.radius * 1.41, 20);\n    const texture = new THREE.TextureLoader().load(img_bottom);\n    const material = new THREE.MeshPhongMaterial({\n      map: texture,\n      color: 0xffffff\n    });\n    return new THREE.Mesh(geometry, material);\n  }\n\n  createTop() {\n    const geometry = new THREE.SphereGeometry(this.radius, 32, 32, 0, 6.4, 0, 1.3);\n    const texture = new THREE.TextureLoader().load(img_top);\n    const material = new THREE.MeshPhongMaterial({\n      map: texture,\n      color: 0xffffff\n    });\n    return new THREE.Mesh(geometry, material);\n  }\n\n  show() {\n    return new Promise((resolve, reject) => {\n      customAnimation.to(this.instance.position, 1, {\n        x: common["c" /* BOTTLECONFIG */].x,\n        y: common["c" /* BOTTLECONFIG */].y + this.blockHeight / 2,\n        z: common["c" /* BOTTLECONFIG */].z,\n        ease: \'Bounce.easeOut\',\n        onComplete: () => resolve()\n      });\n    });\n  }\n\n  setDirection(direction, axis) {\n    this.direction = direction;\n    this.axis = axis;\n  }\n\n  rotate() {\n    const scale = 1.35;\n    this.hero.rotation.z = this.hero.rotation.x = 0;\n\n    if (this.direction == 0) {// x\n      // customAnimation.to(this.hero.rotation, 0.14, { z: this.hero.rotation.z - Math.PI })\n      // customAnimation.to(this.hero.rotation, 0.18, { z: this.hero.rotation.z - 2 * Math.PI, delay: 0.14 })\n      // customAnimation.to(this.head.position, 0.1, { y: this.head.position.y + 0.9 * scale, x: this.head.position.x + 0.45 * scale })\n      // customAnimation.to(this.head.position, 0.1, { y: this.head.position.y - 0.9 * scale, x: this.head.position.x - 0.45 * scale, delay: 0.1 })\n      // customAnimation.to(this.head.position, 0.15, { y: 10.24, x: 0, delay: 0.25 })\n      // customAnimation.to(this.body.scale, 0.1, { y: Math.max(scale, 1), x: Math.max(Math.min(1 / scale, 1), 0.7), z: Math.max(Math.min(1 / scale, 1), 0.7) })\n      // customAnimation.to(this.body.scale, 0.1, { y: Math.min(0.9 / scale, 0.7), x: Math.max(scale, 1.2), z: Math.max(scale, 1.2), delay: 0.1 })\n      // customAnimation.to(this.body.scale, 0.3, { y: 1, x: 1, z: 1, delay: 0.2 })\n    } else if (this.direction == 1) {// z\n      // customAnimation.to(this.hero.rotation, 0.14, { x: this.hero.rotation.x - Math.PI })\n      // customAnimation.to(this.hero.rotation, 0.18, { x: this.hero.rotation.x - 2 * Math.PI, delay: 0.14 })\n      // customAnimation.to(this.head.position, 0.1, { y: this.head.position.y + 0.9 * scale, z: this.head.position.z - 0.45 * scale })\n      // customAnimation.to(this.head.position, 0.1, { z: this.head.position.z + 0.45 * scale, y: this.head.position.y - 0.9 * scale, delay: 0.1 })\n      // customAnimation.to(this.head.position, 0.15, { y: 10.24, z: 0, delay: 0.25 })\n      // customAnimation.to(this.body.scale, 0.05, { y: Math.max(scale, 1), x: Math.max(Math.min(1 / scale, 1), 0.7), z: Math.max(Math.min(1 / scale, 1), 0.7) })\n      // customAnimation.to(this.body.scale, 0.05, { y: Math.min(0.9 / scale, 0.7), x: Math.max(scale, 1.2), z: Math.max(scale, 1.2), delay: 0.1 })\n      // customAnimation.to(this.body.scale, 0.2, { y: 1, x: 1, z: 1, delay: 0.2 })\n    }\n  }\n\n  reset() {\n    this.stop();\n    this.instance && this.instance.position.set(this.x, this.y + 30, this.z);\n    this.instance && this.instance.rotation.set(0, 0, 0);\n  }\n\n  shrink() {\n    this.status = common["e" /* STATUS */].SKRINK; // 切换到蹲下的材质\n\n    if (this.direction) this.body.scale.x = -1;\n\n    try {\n      this.body.material.map = this.stoopMat;\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  jump() {\n    this.status = common["e" /* STATUS */].JUMPUP;\n    if (this.direction) this.body.scale.x = -1;else this.body.scale.x = 1;\n\n    try {\n      this.body.material.map = this.upMat;\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  stop() {\n    this.status = common["e" /* STATUS */].STOP;\n    this.velocity = {\n      vx: 0,\n      vy: 0\n    };\n    this.flyingTime = 0;\n    this.scale = 1;\n\n    if (this.instance) {\n      this.body.scale.x = this.scale;\n      this.body.scale.y = this.scale;\n      this.body.scale.z = this.scale; // this.head.position.y = 10.24;\n\n      this.hero.position.y = 0;\n    }\n\n    if (!this.body) return;\n    if (this.direction) this.body.scale.x = -1;else this.body.scale.x = 1;\n\n    try {\n      this.body.material.map = this.standMat;\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  _shrink() {\n    const DELTA_SCALE = 0.005;\n    const HEAD_DELTA = 0.03;\n    const bottleDeltaY = HEAD_DELTA / 2;\n    const deltaY = this.blockHeight * DELTA_SCALE / 2;\n    this.hero.position.y -= bottleDeltaY + deltaY * 2;\n    return;\n    const HORIZON_DELTA_SCALE = 0.002;\n    const MIN_SCALE = 0.55;\n    this.scale -= DELTA_SCALE;\n    this.scale = Math.max(MIN_SCALE, this.scale);\n\n    if (this.scale <= MIN_SCALE) {\n      return;\n    }\n\n    this.body.scale.y = this.scale;\n    this.body.scale.x += HORIZON_DELTA_SCALE;\n    this.body.scale.z += HORIZON_DELTA_SCALE; // this.head.position.y -= HEAD_DELTA;\n  }\n\n  _jumpStateSwitch() {\n    if (this.status === common["e" /* STATUS */].JUMPUP && this.flyingTime >= 0.15) {\n      // 计算出来的，0.15是最高点\n      this.status = common["e" /* STATUS */].JUMPDOWN; // 切换到下落的材质\n\n      if (this.direction) this.body.scale.x = -1;else this.body.scale.x = 1;\n\n      try {\n        this.body.material.map = this.downMat;\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  }\n\n  _jump(tickTime) {\n    const t = tickTime / 1000;\n    this.flyingTime = this.flyingTime + t;\n\n    this._jumpStateSwitch();\n\n    const translateH = this.velocity.vx * t;\n    const translateY = this.velocity.vy * t - 0.5 * this.gravity * t * t - this.gravity * this.flyingTime * t;\n    this.instance.translateY(translateY);\n    this.instance.translateOnAxis(this.axis, translateH);\n  }\n\n  forerake() {\n    this.fall();\n    return;\n    this.status = common["e" /* STATUS */].FORERAKE;\n    this.instance.position.y = common["a" /* BLOCKCONFIG */].height / 2;\n    setTimeout(() => {\n      if (this.direction === 0) {\n        customAnimation.to(this.instance.rotation, .5, {\n          z: -Math.PI / 2\n        });\n      }\n\n      if (this.direction === 1) {\n        customAnimation.to(this.instance.rotation, .5, {\n          x: -Math.PI / 2\n        });\n      }\n\n      setTimeout(() => {\n        customAnimation.to(this.instance.position, 0.2, {\n          y: -common["a" /* BLOCKCONFIG */].height / 2 + 2\n        });\n      }, 350);\n    }, 200);\n  }\n\n  hypsokinesis() {\n    this.fall();\n    return;\n    this.status = common["e" /* STATUS */].HYPSOKINESIS;\n    this.instance.position.y = common["a" /* BLOCKCONFIG */].height / 2;\n    setTimeout(() => {\n      if (this.direction === 0) {\n        customAnimation.to(this.instance.rotation, .5, {\n          z: Math.PI / 2\n        });\n      }\n\n      if (this.direction === 1) {\n        customAnimation.to(this.instance.rotation, .5, {\n          x: Math.PI / 2\n        });\n      }\n\n      setTimeout(() => {\n        customAnimation.to(this.instance.position, 0.2, {\n          y: -common["a" /* BLOCKCONFIG */].height / 2 + 2\n        });\n      }, 150);\n    }, 200);\n  }\n\n  fall() {\n    this.status = common["e" /* STATUS */].FALL; // 切换到下落的材质\n\n    if (this.direction) this.body.scale.x = -1;else this.body.scale.x = 1;\n\n    try {\n      this.body.material.map = this.fallMat;\n    } catch (e) {\n      console.log(e);\n    }\n\n    console.log(\'fall\');\n    customAnimation.to(this.instance.position, 0.2, {\n      y: -common["a" /* BLOCKCONFIG */].height / 2\n    });\n  }\n\n  update() {\n    if (this.status === common["e" /* STATUS */].SKRINK) {\n      this._shrink();\n    } else if (this.status === common["e" /* STATUS */].JUMPUP || this.status === common["e" /* STATUS */].JUMPDOWN) {\n      const tickTime = Date.now() - this.lastFrameTime;\n\n      this._jump(tickTime);\n    }\n\n    this.lastFrameTime = Date.now();\n  }\n\n}\n\n/* harmony default export */ var part_bottle = (new bottle_Bottle());\n// CONCATENATED MODULE: ./src/utils/index.js\n/* harmony default export */ var utils = ({\n  pointInPolygon(point, vs) {\n    var x = point[0],\n        y = point[1];\n    var inside = false;\n    const xMin = vs[0][0] > vs[2][0] ? vs[2][0] : vs[0][0];\n    const xMax = vs[0][0] < vs[2][0] ? vs[2][0] : vs[0][0];\n    const yMin = vs[0][1] > vs[1][1] ? vs[1][1] : vs[0][1];\n    const yMax = vs[0][1] < vs[1][1] ? vs[1][1] : vs[0][1];\n\n    if (x > xMin && x < xMax && y > yMin && y < yMax) {\n      inside = true;\n    }\n\n    return inside;\n  },\n\n  merge(totalGeometry, geometry, index, positions) {\n    for (var i = 0, len = geometry.faces.length; i < len; ++i) {\n      geometry.faces[i].materialIndex = 0;\n    }\n\n    var mesh = new THREE.Mesh(geometry);\n\n    for (var i = 0, len = positions.length; i < len; ++i) {\n      mesh.position.set(positions[i].x, positions[i].y, positions[i].z);\n      mesh.updateMatrix();\n      totalGeometry.merge(mesh.geometry, mesh.matrix, index);\n    }\n  },\n\n  mapUv(textureWidth, textureHeight, geometry, faceIdx, x1, y1, x2, y2, flag) {\n    var tileUvW = 1 / textureWidth;\n    var tileUvH = 1 / textureHeight;\n\n    if (geometry.faces[faceIdx] instanceof THREE.Face3) {\n      var UVs = geometry.faceVertexUvs[0][faceIdx * 2];\n\n      if (faceIdx == 4 && !flag) {\n        UVs[0].x = x1 * tileUvW;\n        UVs[0].y = y1 * tileUvH;\n        UVs[2].x = x1 * tileUvW;\n        UVs[2].y = y2 * tileUvH;\n        UVs[1].x = x2 * tileUvW;\n        UVs[1].y = y1 * tileUvH;\n      } else {\n        UVs[0].x = x1 * tileUvW;\n        UVs[0].y = y1 * tileUvH;\n        UVs[1].x = x1 * tileUvW;\n        UVs[1].y = y2 * tileUvH;\n        UVs[2].x = x2 * tileUvW;\n        UVs[2].y = y1 * tileUvH;\n      }\n\n      var UVs = geometry.faceVertexUvs[0][faceIdx * 2 + 1];\n\n      if (faceIdx == 4 && !flag) {\n        UVs[2].x = x1 * tileUvW;\n        UVs[2].y = y2 * tileUvH;\n        UVs[1].x = x2 * tileUvW;\n        UVs[1].y = y2 * tileUvH;\n        UVs[0].x = x2 * tileUvW;\n        UVs[0].y = y1 * tileUvH;\n      } else {\n        UVs[0].x = x1 * tileUvW;\n        UVs[0].y = y2 * tileUvH;\n        UVs[1].x = x2 * tileUvW;\n        UVs[1].y = y2 * tileUvH;\n        UVs[2].x = x2 * tileUvW;\n        UVs[2].y = y1 * tileUvH;\n      }\n    }\n  }\n\n});\n// CONCATENATED MODULE: ./src/part/font.js\nconst face = {\n  "glyphs": {\n    "0": {\n      "ha": 694,\n      "x_min": 65,\n      "x_max": 624,\n      "o": "m 347 917 q 220 800 271 917 q 168 488 168 684 q 220 168 168 282 q 347 54 271 54 q 475 168 429 54 q 521 488 521 282 q 477 800 521 684 q 347 917 434 917 m 347 11 q 146 136 228 11 q 65 488 65 260 q 144 830 65 700 q 347 960 222 960 q 545 836 467 960 q 624 488 624 711 q 545 138 624 266 q 347 11 467 11 z "\n    },\n    "1": {\n      "ha": 694,\n      "x_min": 157,\n      "x_max": 553,\n      "o": "m 396 966 l 396 141 q 423 76 396 98 q 499 54 450 54 l 553 54 l 553 22 l 157 22 l 157 54 l 206 54 q 285 76 260 54 q 309 141 309 98 l 309 798 q 296 833 309 819 q 255 846 282 846 l 157 846 l 157 879 l 206 879 q 312 901 271 879 q 374 966 353 922 l 396 966 z "\n    },\n    "2": {\n      "ha": 694,\n      "x_min": 71,\n      "x_max": 608,\n      "o": "m 505 722 q 461 871 505 819 q 331 922 418 922 q 220 887 266 922 q 174 798 174 852 q 193 743 174 765 q 212 700 212 722 q 198 659 212 673 q 157 646 184 646 q 106 665 125 646 q 87 727 87 684 q 168 901 87 841 q 342 960 250 960 q 534 895 472 960 q 597 732 597 830 q 567 602 597 667 q 472 477 537 537 q 231 231 315 326 q 130 103 146 136 l 450 103 q 532 141 499 103 q 575 255 564 179 l 608 255 l 575 22 l 71 22 l 71 92 q 160 217 98 141 q 326 396 222 293 q 461 570 418 488 q 505 722 505 651 z "\n    },\n    "3": {\n      "ha": 694,\n      "x_min": 81,\n      "x_max": 608,\n      "o": "m 608 271 q 532 90 608 168 q 320 11 456 11 q 152 65 222 11 q 81 190 81 119 q 103 247 81 222 q 146 271 125 271 q 193 247 179 271 q 206 206 206 222 q 195 160 206 179 q 184 125 184 141 q 225 71 184 92 q 315 49 266 49 q 461 106 412 49 q 510 282 510 163 q 458 439 510 380 q 266 499 407 499 l 266 537 q 426 589 374 537 q 477 732 477 640 q 437 865 477 808 q 309 922 396 922 q 228 903 271 922 q 184 841 184 884 q 195 787 184 798 q 206 760 206 776 q 195 716 206 732 q 157 700 184 700 q 117 716 136 700 q 98 776 98 732 q 168 909 98 857 q 331 960 239 960 q 505 892 439 960 q 570 749 570 825 q 529 610 570 667 q 401 526 488 553 q 564 412 521 483 q 608 271 608 342 z "\n    },\n    "4": {\n      "ha": 694,\n      "x_min": 49,\n      "x_max": 646,\n      "o": "m 499 125 q 521 71 499 87 q 581 54 543 54 l 629 54 l 629 22 l 271 22 l 271 54 l 331 54 q 393 71 374 54 q 412 125 412 87 l 412 304 l 49 304 l 49 331 l 445 960 l 499 960 l 499 336 l 646 336 l 646 304 l 499 304 l 499 125 m 407 825 l 98 336 l 412 336 l 412 825 l 407 825 z "\n    },\n    "5": {\n      "ha": 694,\n      "x_min": 81,\n      "x_max": 608,\n      "o": "m 374 618 q 543 540 477 618 q 608 331 608 461 q 540 98 608 184 q 331 11 472 11 q 157 68 233 11 q 81 206 81 125 q 100 263 81 239 q 152 288 119 288 q 195 266 184 288 q 206 228 206 244 q 190 176 206 195 q 174 136 174 157 q 225 71 174 92 q 336 49 277 49 q 469 119 423 49 q 515 320 515 190 q 475 496 515 429 q 353 564 434 564 q 250 543 293 564 q 168 450 206 521 l 119 456 l 146 949 l 591 949 l 575 868 l 184 868 l 163 510 q 269 602 217 586 q 374 618 320 618 z "\n    },\n    "6": {\n      "ha": 694,\n      "x_min": 65,\n      "x_max": 624,\n      "o": "m 168 391 q 225 138 168 228 q 363 49 282 49 q 488 109 445 49 q 532 331 532 168 q 486 499 532 439 q 374 559 439 559 q 263 524 315 559 q 168 391 212 488 m 380 613 q 567 526 510 613 q 624 331 624 439 q 545 90 624 168 q 363 11 467 11 q 141 122 217 11 q 65 445 65 233 q 157 827 65 694 q 407 960 250 960 q 529 917 483 960 q 575 841 575 873 q 562 792 575 808 q 515 776 548 776 q 475 789 488 776 q 461 830 461 803 q 464 852 461 841 q 467 873 467 863 q 450 909 467 895 q 391 922 434 922 q 233 838 298 922 q 168 472 168 754 q 258 578 201 543 q 380 613 315 613 z "\n    },\n    "7": {\n      "ha": 694,\n      "x_min": 87,\n      "x_max": 613,\n      "o": "m 613 911 q 431 551 499 727 q 363 244 363 374 q 366 182 363 222 q 369 87 369 141 q 355 27 369 43 q 309 11 342 11 q 263 30 282 11 q 244 98 244 49 q 290 353 244 201 q 537 868 336 505 l 266 868 q 171 830 206 868 q 119 716 136 792 l 87 722 l 125 949 l 613 949 l 613 911 z "\n    },\n    "8": {\n      "ha": 694,\n      "x_min": 60,\n      "x_max": 613,\n      "o": "m 136 244 q 193 103 136 157 q 336 49 250 49 q 486 103 439 49 q 532 239 532 157 q 467 374 532 309 q 271 494 401 439 q 171 385 206 450 q 136 244 136 320 m 613 255 q 537 81 613 152 q 336 11 461 11 q 141 81 222 11 q 60 244 60 152 q 106 401 60 336 q 239 515 152 467 q 122 610 163 553 q 81 738 81 667 q 152 895 81 830 q 347 960 222 960 q 532 895 461 960 q 602 738 602 830 q 562 616 602 673 q 434 515 521 559 q 570 396 526 461 q 613 255 613 331 m 526 732 q 483 865 526 808 q 347 922 439 922 q 201 868 244 922 q 157 754 157 814 q 220 637 157 694 q 396 537 282 581 q 494 618 461 570 q 526 732 526 667 z "\n    },\n    "9": {\n      "ha": 694,\n      "x_min": 60,\n      "x_max": 618,\n      "o": "m 152 662 q 198 480 152 543 q 315 418 244 418 q 456 494 396 418 q 515 635 515 570 q 472 844 515 765 q 331 922 429 922 q 195 849 239 922 q 152 662 152 776 m 298 369 q 125 437 190 369 q 60 656 60 505 q 130 873 60 787 q 331 960 201 960 q 543 852 467 960 q 618 537 618 743 q 529 160 618 309 q 282 11 439 11 q 160 43 212 11 q 109 130 109 76 q 122 174 109 152 q 168 195 136 195 q 212 171 201 195 q 222 114 222 146 q 228 79 222 92 q 239 60 233 65 q 258 52 244 54 q 288 49 271 49 q 445 157 385 49 q 515 521 505 266 q 434 412 488 456 q 298 369 380 369 z "\n    },\n    " ": {\n      "ha": 694,\n      "x_min": 0,\n      "x_max": 0,\n      "o": ""\n    },\n    ":": {\n      "ha": 694,\n      "x_min": 260,\n      "x_max": 412,\n      "o": "m 412 591 q 391 537 412 559 q 336 515 369 515 q 282 537 304 515 q 260 591 260 559 q 282 646 260 624 q 336 667 304 667 q 391 646 369 667 q 412 591 412 624 m 412 81 q 391 27 412 49 q 336 5 369 5 q 282 27 304 5 q 260 81 260 49 q 282 136 260 114 q 336 157 304 157 q 391 136 369 157 q 412 81 412 114 z "\n    },\n    "关": {\n      "ha": 1389,\n      "x_min": 54,\n      "x_max": 1335,\n      "o": "m 998 1063 q 1063 1031 1063 1096 q 955 857 1009 933 l 1215 857 q 1215 792 1270 825 l 716 792 l 716 510 l 1259 510 q 1259 445 1324 477 l 738 445 q 1302 -109 933 11 q 1280 -174 1335 -174 q 694 391 890 -43 q 119 -174 608 0 q 98 -109 54 -163 q 640 445 564 54 l 109 445 q 109 510 54 477 l 651 510 l 651 792 l 163 792 q 163 857 109 814 l 467 857 q 369 1031 423 944 q 434 1063 380 1096 q 543 857 510 933 l 868 857 q 998 1063 933 955 z "\n    },\n    "分": {\n      "ha": 1389,\n      "x_min": 33,\n      "x_max": 1367,\n      "o": "m 803 1063 q 868 1085 814 1118 q 1356 521 1085 716 q 1302 477 1367 456 q 803 1063 1020 662 m 510 1063 q 575 1042 564 1107 q 98 477 434 662 q 65 532 33 477 q 510 1063 380 727 m 304 586 l 1031 586 q 1150 467 1150 586 q 1118 11 1150 217 q 944 -184 1085 -174 q 640 -119 803 -184 q 662 -54 608 -65 q 933 -119 825 -119 q 1053 22 1031 -109 q 1085 456 1085 293 q 1020 521 1085 521 l 608 521 q 119 -184 575 0 q 87 -130 54 -184 q 543 521 510 54 l 304 521 q 304 586 260 543 z "\n    },\n    "卡": {\n      "ha": 1389,\n      "x_min": 43,\n      "x_max": 1367,\n      "o": "m 694 1085 l 694 933 l 1194 933 q 1194 868 1237 901 l 694 868 l 694 586 l 1324 586 q 1324 521 1367 553 l 694 521 l 694 391 q 1204 141 1031 250 q 1172 87 1237 87 q 694 315 966 206 l 694 -184 q 629 -184 662 -228 l 629 521 l 87 521 q 87 586 43 553 l 629 586 l 629 1085 q 694 1085 662 1128 z "\n    },\n    "得": {\n      "ha": 1389,\n      "x_min": 33,\n      "x_max": 1367,\n      "o": "m 673 1063 l 1096 1063 q 1215 955 1226 1063 l 1215 705 q 1096 586 1226 575 l 673 586 q 564 694 564 575 l 564 955 q 673 1063 564 1063 m 1085 998 l 694 998 q 629 933 629 998 l 629 868 l 1150 868 l 1150 944 q 1085 998 1161 998 m 1150 803 l 629 803 l 629 716 q 694 651 629 640 l 1085 651 q 1150 716 1161 640 l 1150 803 m 640 195 q 857 -11 749 109 q 803 -54 868 -76 q 597 141 716 43 q 640 195 575 206 m 532 423 q 532 488 488 456 l 1248 488 q 1248 423 1291 456 l 1150 423 l 1150 293 l 1324 293 q 1324 228 1367 260 l 1150 228 l 1150 -65 q 868 -163 1161 -228 q 879 -87 825 -119 q 1085 -43 1107 -163 l 1085 228 l 467 228 q 467 293 412 260 l 1085 293 l 1085 423 l 532 423 m 358 1107 q 423 1085 401 1139 q 119 673 304 814 q 76 727 65 662 q 358 1107 271 901 m 445 825 q 499 792 499 846 q 347 521 456 673 l 347 -174 q 282 -174 315 -217 l 282 445 q 87 282 174 326 q 54 336 33 282 q 445 825 315 521 z "\n    },\n    "：": {\n      "ha": 1389,\n      "x_min": 326,\n      "x_max": 477,\n      "o": "m 401 597 q 477 521 467 586 q 401 445 467 456 q 326 521 336 456 q 401 597 336 586 m 401 98 q 477 22 467 87 q 401 -54 467 -43 q 326 22 336 -43 q 401 98 336 87 z "\n    }\n  },\n  "familyName": "YouYuan",\n  "ascender": 1139,\n  "descender": -250,\n  "underlinePosition": -119,\n  "underlineThickness": 71,\n  "boundingBox": {\n    "yMin": -315,\n    "xMin": -11,\n    "yMax": 1194,\n    "xMax": 1454\n  },\n  "resolution": 1000,\n  "original_font_information": {\n    "format": 0,\n    "copyright": "(C) Copyright Stone Co., 1996",\n    "fontFamily": "YouYuan",\n    "fontSubfamily": "Regular",\n    "uniqueID": "YouYuan",\n    "fullName": "YouYuan",\n    "version": "Version 3.01",\n    "postScriptName": "YouYuan",\n    "trademark": "Trademark of Stone Co., Beijing"\n  },\n  "cssFontWeight": "normal",\n  "cssFontStyle": "normal"\n};\n/* harmony default export */ var font = (face);\n// CONCATENATED MODULE: ./src/part/scoreText.js\n\nclass scoreText_Text {\n  constructor() {\n    // 转化字体为有限字符集 https://gero3.github.io/facetype.js/\n    this.font = new THREE.Font(font);\n    this.size = 5.0;\n    this.height = 0.1;\n    this.fillStyle = 0x666666;\n  }\n\n  init(options) {\n    this.material = new THREE.MeshBasicMaterial({\n      color: this.fillStyle,\n      transparent: true\n    });\n    if (options && options.opacity) this.material.opacity = options.opacity;\n    this.options = options || {};\n    const geometry = new THREE.TextGeometry(\'0\', {\n      \'font\': this.font,\n      \'size\': this.size,\n      \'height\': this.height\n    });\n    this.instance = new THREE.Mesh(geometry, this.material);\n    this.instance.name = \'scoreText\';\n  }\n\n  updateScore(score) {\n    this.instance = new THREE.Mesh(new THREE.TextGeometry(score, {\n      \'font\': this.font,\n      \'size\': this.size,\n      \'height\': this.height\n    }), this.material);\n  }\n\n}\n// CONCATENATED MODULE: ./public/audio/scale_intro.mp3\n/* harmony default export */ var scale_intro = (__webpack_require__.p + "audio/scale_intro.c2b27c52.mp3");\n// CONCATENATED MODULE: ./public/audio/scale_loop.mp3\n/* harmony default export */ var scale_loop = (__webpack_require__.p + "audio/scale_loop.063fe658.mp3");\n// CONCATENATED MODULE: ./public/audio/start.mp3\n/* harmony default export */ var audio_start = (__webpack_require__.p + "audio/start.15c19cae.mp3");\n// CONCATENATED MODULE: ./public/audio/fall_1.mp3\n/* harmony default export */ var fall_1 = (__webpack_require__.p + "audio/fall_1.e50746ce.mp3");\n// CONCATENATED MODULE: ./public/audio/fall_2.mp3\n/* harmony default export */ var fall_2 = (__webpack_require__.p + "audio/fall_2.f0310012.mp3");\n// CONCATENATED MODULE: ./src/audiomanager/index.js\n\n\n\n\n\n\n\nconst audioList = [{\n  key: "scaleIntro",\n  source: scale_intro\n}, {\n  key: "scaleLoop",\n  source: scale_loop\n}, {\n  key: "audioStart",\n  source: audio_start\n}, {\n  key: "audioFall1",\n  source: fall_1\n}, {\n  key: "audioFall2",\n  source: fall_2\n}];\n\nclass audiomanager_AudioManager {\n  constructor() {\n    this.scaleLoopBuffer = "";\n    this.scaleIntroBuffer = "";\n    this.audioComboBuffer = "";\n    this.num = 0;\n  }\n\n  init() {\n    this.listener = new THREE.AudioListener();\n    this.sound = new THREE.Audio(this.listener);\n    this.sound.setVolume(.8);\n\n    this.sound.onEnded = () => {\n      this.sound.stop();\n\n      if (part_bottle.status === common["e" /* STATUS */].SKRINK) {\n        this.sound.setBuffer(this.scaleLoopBuffer);\n        this.sound.setLoop(true);\n        this.sound.play();\n      }\n    };\n\n    return new Promise((resolve, reject) => {\n      audioList.map(item => {\n        const {\n          key,\n          source\n        } = item;\n        let loader = new THREE.AudioLoader();\n        loader.load(source, buffer => {\n          this[`${key}Buffer`] = buffer;\n          this.num++;\n\n          if (this.num >= audioList.length - 1) {\n            resolve();\n          }\n        });\n      });\n    });\n  }\n\n  shrinkPlay() {\n    this.sound.stop();\n    this.sound.setBuffer(this.scaleIntroBuffer);\n    this.sound.setLoop(false);\n    this.sound.play();\n  }\n\n  shrinkStop() {\n    this.sound.stop();\n  }\n\n  startPlay() {\n    this.sound.setBuffer(this.audioStartBuffer);\n    this.sound.setLoop(false);\n    this.sound.play();\n  }\n\n  fallBlockPlay() {\n    this.sound.stop();\n    this.sound.setBuffer(this.audioFall2Buffer);\n    this.sound.setLoop(false);\n    this.sound.play();\n  }\n\n  fallPlanePlay() {\n    this.sound.stop();\n    this.sound.setBuffer(this.audioFall1Buffer);\n    this.sound.setLoop(false);\n    this.sound.play();\n  }\n\n}\n\n/* harmony default export */ var audiomanager = (new audiomanager_AudioManager());\n// CONCATENATED MODULE: ./src/stage/stage-game-main.js\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n\n\n\n\n\n\nconst HIT_NEXT_BLOCK_NORMAL = 1;\nconst HIT_BLOCK_CURRENT = 2;\nconst GAME_OVER_NEXT_BLOCK_FRONT = 3;\nconst GAME_OVER_CURRENT_BLOCK_BACK = 4;\nconst GAME_OVER_NEXT_BLOCK_BACK = 5;\nconst GAME_OVER_BOTH = 6;\nconst HIT_NEXT_BLOCK_CENTER = 7;\nconst LEVEL_SCORE_COUNT = 5; // 每过5个方块作为一个关卡\n\nconst MAX_LEVEL = 3; // 最大关卡\n\nclass stage_game_main_StageGameMain {\n  constructor(callback) {\n    _defineProperty(this, "onTouchStart", e => {\n      console.log(\'touch start\');\n      if (this.state !== \'stop\') return;\n      this.touchStartTime = Date.now();\n      audiomanager.shrinkPlay();\n      this.bottle.shrink();\n      this.currentBlock.shrink();\n    });\n\n    _defineProperty(this, "onTouchEnd", e => {\n      console.log(\'touch end\');\n      if (this.state !== \'stop\') return;\n      if (this.touchStartTime === 0) return;\n      audiomanager.shrinkStop();\n      this.touchEndTime = Date.now();\n      if (isNaN(this.touchStartTime)) this.touchStartTime = this.touchEndTime;\n      const duration = this.touchEndTime - this.touchStartTime;\n      this.touchStartTime = 0;\n\n      if (!this.end) {\n        this.bottle.velocity.vx = Math.min(duration / 6, 120);\n        this.bottle.velocity.vx = +this.bottle.velocity.vx.toFixed(2);\n      }\n\n      this.bottle.velocity.vy = Math.min(150 + duration / 30, 300);\n      this.bottle.velocity.vy = +this.bottle.velocity.vy.toFixed(2);\n      this.state = "jump";\n      this.hit = this.getHitStatus(this.bottle, this.currentBlock, this.nextBlock, common["a" /* BLOCKCONFIG */].height / 2 - (1 - this.currentBlock.instance.scale.y) * common["a" /* BLOCKCONFIG */].height);\n      this.checkingHit = true;\n      this.currentBlock.rebound();\n      this.bottle.rotate();\n      this.bottle.jump();\n    });\n\n    this.callback = callback;\n  }\n\n  init() {\n    console.log(`GameMain init`);\n    const {\n      canvas\n    } = common["f" /* common */];\n    this.state = \'\';\n    this.canvas = canvas;\n    this.score = 0;\n    this.level = 1;\n    this.scene = src_scene;\n    this.ground = ground;\n    this.bottle = part_bottle;\n    this.gravity = common["f" /* common */].gravity;\n    this.scoreText = new scoreText_Text();\n    this.levelText = new scoreText_Text();\n    this.end = false;\n    this.scoreText.init();\n    this.levelText.init();\n    this.scene.init();\n    this.ground.init();\n    this.bottle.init();\n    audiomanager.init().then(() => {\n      this.addBottle();\n    });\n    this.addGround();\n    this.addInitBlock();\n    this.addScore();\n    this.render();\n  }\n\n  restart() {\n    console.log(\'restart Game\');\n    this.score = 0;\n    this.level = 1;\n    this.state = \'\';\n    this.end = false;\n    this.deleteObjectsFromScene();\n    this.scene.reset();\n    this.bottle.reset();\n    this.ground.reset();\n    this.updateScore(0);\n    this.addInitBlock();\n    this.addGround();\n    this.addBottle();\n  }\n\n  addInitBlock() {\n    const scene = this.scene.instance;\n    this.currentBlock = new cuboid_CuboidBlock(-15, 0, 0);\n    this.nextBlock = new cylinder_CylinderBlock(23, 0, 0);\n    scene.add(this.currentBlock.instance);\n    scene.add(this.nextBlock.instance);\n    const initDirection = 0;\n    this.targetPosition = this.nextBlock.instance.position;\n    this.setDirection(initDirection);\n  }\n\n  addScore() {\n    this.scoreText.updateScore(`0`);\n    this.scene.addScore(this.scoreText.instance);\n    this.levelText.updateScore(`关卡1`);\n    this.scene.addLevel(this.levelText.instance);\n  }\n\n  updateScore(score) {\n    this.scoreText.updateScore(`${score}`);\n    this.scene.updateScore(this.scoreText.instance);\n\n    if (score % LEVEL_SCORE_COUNT === 0) {\n      this.levelText.updateScore(`关卡${this.level}`);\n      this.scene.updateLevel(this.levelText.instance);\n    }\n  }\n\n  addGround() {\n    const scene = this.scene.instance;\n    scene.add(this.ground.instance);\n  }\n\n  addBottle() {\n    const scene = this.scene.instance;\n    audiomanager.startPlay();\n    scene.add(this.bottle.instance);\n    this.bottle.show().then(() => {\n      this.addTouchEvent();\n      this.state = \'stop\';\n      console.log(\'show end\');\n    });\n  }\n\n  addTouchEvent() {\n    this.canvas.addEventListener("touchstart", this.onTouchStart, false);\n    this.canvas.addEventListener("touchend", this.onTouchEnd, false);\n    this.canvas.addEventListener("mousedown", this.onTouchStart, false);\n    this.canvas.addEventListener("mouseup", this.onTouchEnd, false);\n  }\n\n  removeTouchEvent() {\n    this.canvas.removeEventListener("touchstart", this.onTouchStart, false);\n    this.canvas.removeEventListener("touchend", this.onTouchEnd, false);\n    this.canvas.removeEventListener("mousedown", this.onTouchStart, false);\n    this.canvas.removeEventListener("mouseup", this.onTouchEnd, false);\n  }\n\n  setDirection(direction) {\n    const currentPosition = {\n      x: this.bottle.instance.position.x,\n      z: this.bottle.instance.position.z\n    };\n    this.axis = new THREE.Vector3(this.targetPosition.x - currentPosition.x, 0, this.targetPosition.z - currentPosition.z);\n    this.axis.normalize();\n    this.bottle.setDirection(direction, this.axis);\n  }\n\n  render() {\n    if (this.currentBlock) {\n      this.currentBlock.update();\n    }\n\n    if (this.visible) {\n      this.scene.render();\n    }\n\n    this.checkBottleHit();\n\n    if (this.bottle) {\n      this.bottle.update();\n    }\n\n    requestAnimationFrame(this.render.bind(this));\n  }\n\n  show() {\n    console.log(`GameMain show`);\n    this.visible = true;\n  }\n\n  hide() {\n    console.log(`GameNain hide`);\n    this.visible = false;\n  }\n\n  deleteObjectsFromScene() {\n    let obj = this.scene.instance.getObjectByName(\'block\');\n\n    while (obj) {\n      this.scene.instance.remove(obj);\n\n      if (obj.geometry) {\n        obj.geometry.dispose();\n      }\n\n      if (obj.material) {\n        obj.material.dispose();\n      }\n\n      obj = this.scene.instance.getObjectByName(\'block\');\n    }\n\n    this.scene.instance.remove(this.bottle.instance);\n    this.scene.instance.remove(this.ground.instance);\n  }\n\n  endNotify() {\n    console.log(\'Well done!\');\n\n    if (confirm(\'Well done! 再来一局？\')) {\n      this.restart();\n    }\n  }\n\n  checkBottleHit() {\n    if (this.checkingHit && this.bottle.instance.position.y <= common["a" /* BLOCKCONFIG */].height / 2 + 0.1 && this.bottle.status === \'jump_down\' && this.bottle.flyingTime > 0.3) {\n      this.checkingHit = false;\n\n      if (this.hit === HIT_NEXT_BLOCK_NORMAL || this.hit === HIT_NEXT_BLOCK_CENTER) {\n        this.state = \'stop\';\n        this.bottle.stop();\n        this.bottle.instance.position.y = common["a" /* BLOCKCONFIG */].height / 2;\n        this.bottle.instance.position.x = this.bottle.destination[0];\n        this.bottle.instance.position.z = this.bottle.destination[1];\n        if (this.end) return;\n\n        if ((this.score + 1) % LEVEL_SCORE_COUNT === 0) {\n          // 切换关卡\n          alert(`恭喜你完成第${this.level}关！`);\n          this.level++;\n\n          if (this.level > MAX_LEVEL) {\n            this.level--;\n            this.end = true;\n            this.updateScore(++this.score);\n            this.endNotify();\n            return;\n          }\n        }\n\n        this.updateScore(++this.score);\n        this.updateNextBlock();\n      } else if (this.hit === HIT_BLOCK_CURRENT) {\n        this.state = \'stop\';\n        this.bottle.stop();\n        this.bottle.instance.position.y = common["a" /* BLOCKCONFIG */].height / 2;\n        this.bottle.instance.position.x = this.bottle.destination[0];\n        this.bottle.instance.position.z = this.bottle.destination[1];\n      } else {\n        if (this.hit === GAME_OVER_CURRENT_BLOCK_BACK || this.hit === GAME_OVER_NEXT_BLOCK_BACK) {\n          stopAllAnimation();\n          this.bottle.stop();\n          this.bottle.forerake();\n          audiomanager.fallBlockPlay();\n        } else if (this.hit === GAME_OVER_NEXT_BLOCK_FRONT) {\n          stopAllAnimation();\n          this.bottle.stop();\n          this.bottle.hypsokinesis();\n          audiomanager.fallBlockPlay();\n        } else {\n          stopAllAnimation();\n          this.bottle.stop();\n          this.bottle.fall();\n          audiomanager.fallPlanePlay();\n        }\n\n        this.state = \'over\';\n        this.removeTouchEvent();\n        setTimeout(() => {\n          this.callback.showGameOverStage();\n        }, 1500);\n      }\n    }\n  }\n\n  getHitStatus(bottle, currentBlock, nextBlock, initY) {\n    let flyingTime = bottle.velocity.vy / this.gravity * 2;\n    initY = initY || +bottle.instance.position.y.toFixed(2);\n    let destinationY = common["a" /* BLOCKCONFIG */].height / 2;\n    let differenceY = destinationY;\n    let time = +((-bottle.velocity.vy + Math.sqrt(Math.pow(bottle.velocity.vy, 2) - 2 * this.gravity * differenceY)) / -this.gravity).toFixed(2);\n    flyingTime -= time;\n    flyingTime = +flyingTime.toFixed(2);\n    let destination = [];\n    let bottlePosition = new THREE.Vector2(bottle.instance.position.x, bottle.instance.position.z);\n    let translate = new THREE.Vector2(this.axis.x, this.axis.z).setLength(bottle.velocity.vx * flyingTime);\n    bottlePosition.add(translate);\n    bottle.destination = [+bottlePosition.x.toFixed(2), +bottlePosition.y.toFixed(2)];\n    destination.push(+bottlePosition.x.toFixed(2), +bottlePosition.y.toFixed(2));\n    let result1, result2; // return HIT_NEXT_BLOCK_CENTER;\n\n    if (nextBlock) {\n      let nextDiff = Math.pow(destination[0] - nextBlock.instance.position.x, 2) + Math.pow(destination[1] - nextBlock.instance.position.z, 2);\n      let nextPolygon = nextBlock.getVertices();\n\n      if (utils.pointInPolygon(destination, nextPolygon)) {\n        if (Math.abs(nextDiff) < 5) {\n          return HIT_NEXT_BLOCK_NORMAL;\n        } else {\n          return HIT_NEXT_BLOCK_CENTER;\n        }\n      } else if (utils.pointInPolygon([destination[0] - this.bottle.width, destination[1]], nextPolygon) || utils.pointInPolygon([destination[0], destination[1] + this.bottle.depth / 2], nextPolygon)) {\n        result1 = GAME_OVER_NEXT_BLOCK_BACK;\n      } else if (utils.pointInPolygon([destination[0], destination[1] - this.bottle.depth / 2], nextPolygon) || utils.pointInPolygon([destination[0] + this.bottle.depth / 2, destination[1]], nextPolygon)) {\n        result1 = GAME_OVER_NEXT_BLOCK_FRONT;\n      }\n    }\n\n    let currentPolygon = currentBlock.getVertices();\n\n    if (utils.pointInPolygon(destination, currentPolygon)) {\n      return HIT_BLOCK_CURRENT;\n    } else if (utils.pointInPolygon([destination[0], destination[1] + this.bottle.depth], currentPolygon) || utils.pointInPolygon([destination[0] - this.bottle.width / 2, destination[1]], currentPolygon)) {\n      if (result1) return GAME_OVER_BOTH;\n      return GAME_OVER_CURRENT_BLOCK_BACK;\n    }\n\n    return result1 || result2 || 0;\n  }\n\n  updateNextBlock() {\n    const seed = Math.round(Math.random());\n    const type = seed ? \'cuboid\' : \'cylinder\';\n    const direction = Math.round(Math.random());\n    const width = Math.round(Math.random() * 6) + 10;\n    const distance = Math.round(Math.random() * 25) + 20;\n    this.currentBlock = this.nextBlock;\n    const targetPosition = this.targetPosition = {};\n\n    if (direction === 0) {\n      targetPosition.x = this.currentBlock.instance.position.x + distance;\n      targetPosition.y = this.currentBlock.instance.position.y;\n      targetPosition.z = this.currentBlock.instance.position.z;\n    }\n\n    if (direction === 1) {\n      targetPosition.x = this.currentBlock.instance.position.x;\n      targetPosition.y = this.currentBlock.instance.position.y;\n      targetPosition.z = this.currentBlock.instance.position.z - distance;\n    }\n\n    this.setDirection(direction);\n    if (this.score >= MAX_LEVEL * LEVEL_SCORE_COUNT) return;\n    const matIndex = parseInt(this.score / LEVEL_SCORE_COUNT); // 每5分钟切换一次方块材质（下一个关卡）\n\n    if (type === common["b" /* BLOCKTYPE */].CUBOID) {\n      this.nextBlock = new cuboid_CuboidBlock(targetPosition.x, targetPosition.y, targetPosition.z, \'popup\', matIndex); // 高度不能改变，所以长宽由材质决定，下同\n    } else if (type === common["b" /* BLOCKTYPE */].CYLINDER) {\n      this.nextBlock = new cylinder_CylinderBlock(targetPosition.x, targetPosition.y, targetPosition.z, \'popup\', matIndex);\n    }\n\n    this.scene.instance.add(this.nextBlock.instance);\n    const cameraTargetPosition = {\n      x: (this.currentBlock.instance.position.x + this.nextBlock.instance.position.x) / 2,\n      y: (this.currentBlock.instance.position.y + this.nextBlock.instance.position.y) / 2,\n      z: (this.currentBlock.instance.position.z + this.nextBlock.instance.position.z) / 2\n    };\n    this.scene.updateCameraPosition(cameraTargetPosition);\n    this.ground.updatePosition(cameraTargetPosition);\n  }\n\n}\n// CONCATENATED MODULE: ./public/images/replay.png\n/* harmony default export */ var replay = (__webpack_require__.p + "images/replay.d180fbab.png");\n// CONCATENATED MODULE: ./src/stage/stage-game-over.js\nfunction stage_game_over_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\nclass stage_game_over_StageGameOver {\n  constructor(callback) {\n    stage_game_over_defineProperty(this, "addTouchEvent", e => {\n      this.canvas.addEventListener(\'touchend\', this.onTouchEnd.bind(this), true);\n      this.canvas.addEventListener(\'mouseup\', this.onTouchEnd.bind(this), true);\n    });\n\n    stage_game_over_defineProperty(this, "removeTouchEvent", e => {\n      this.canvas.removeEventListener(\'touchend\', this.onTouchEnd.bind(this), true);\n      this.canvas.removeEventListener(\'mouseup\', this.onTouchEnd.bind(this), true);\n    });\n\n    this.callback = callback;\n    const {\n      canvas\n    } = common["f" /* common */];\n    this.canvas = canvas;\n    this.score = 0;\n  }\n\n  init() {\n    console.log(`GameOver init`);\n    this.render();\n  }\n\n  render() {\n    const {\n      width,\n      height,\n      aspect\n    } = common["f" /* common */];\n    const canvas = document.createElement("canvas");\n    canvas.width = width;\n    canvas.height = height;\n    this.context = canvas.getContext(\'2d\');\n    this.context.fillStyle = \'rgba(0,0,0,.7)\';\n    this.context.fillRect((width - 200) / 2, (height - 200) / 2, 200, 200);\n    this.context.fillStyle = \'#eee\';\n    this.context.font = \'22px Georgia\';\n    this.context.fillText(\'Game Over\', (width - 200) / 2 + 45, (height - 200) / 2 + 55);\n    this.replay_btn = new Image();\n\n    this.replay_btn.onload = () => {\n      this.context.drawImage(this.replay_btn, width / 2 - 60, (height - 200) / 2 + 125, 120, 47);\n    };\n\n    this.replay_btn.src = replay;\n    this.texture = new THREE.Texture(canvas);\n    this.material = new THREE.MeshBasicMaterial({\n      map: this.texture,\n      transparent: true // side: THREE.DoubleSide\n\n    });\n    this.geometry = new THREE.PlaneGeometry(60, 60 * aspect);\n    this.mesh = new THREE.Mesh(this.geometry, this.material);\n    this.mesh.position.z = 20;\n    this.mesh.visible = false;\n    this.texture.needsUpdate = true;\n    src_scene.camera.instance.add(this.mesh);\n  }\n\n  show() {\n    console.log(`GameOver show`);\n    this.mesh.visible = true;\n    this.score = this.callback.getScore();\n    this.addTouchEvent();\n  }\n\n  hide() {\n    console.log(`GameOver hide`);\n    this.mesh.visible = false;\n    this.removeTouchEvent();\n    console.log(\'------------\');\n  }\n\n  onTouchEnd(e) {\n    if (!this.mesh.visible) return;\n    this.callback.restartGame();\n  }\n\n}\n// CONCATENATED MODULE: ./src/game/stage.js\n\n\n\nclass stage_GameStage {\n  constructor() {}\n\n  getScore() {\n    return this.stage_game_main.score;\n  }\n\n  showGameOverStage() {\n    this.stage_game_over.show();\n  }\n\n  showGameMainStage() {\n    this.stage_game_main.show();\n    this.stage_game_over.hide();\n  }\n\n  restartGame() {\n    this.stage_game_main.show();\n    this.stage_game_over.hide();\n    this.stage_game_main.restart();\n  }\n\n  initMainStage(callback) {\n    this.stage_game_main = new stage_game_main_StageGameMain(callback);\n    this.stage_game_main.init();\n  }\n\n  initOverStage(callback) {\n    this.stage_game_over = new stage_game_over_StageGameOver(callback);\n    this.stage_game_over.init();\n  }\n\n}\n\n/* harmony default export */ var stage = (new stage_GameStage());\n// CONCATENATED MODULE: ./src/game/controller.js\n\n\n\n\nclass controller_GameController {\n  constructor() {\n    this.game_model = model;\n    this.game_stage = stage;\n    this.game_model.changeStage.attach((sender, args) => {\n      switch (args.stage) {\n        case common["d" /* STAGEGROUP */].GAMEOVER:\n          this.game_stage.showGameOverStage();\n          break;\n\n        case common["d" /* STAGEGROUP */].GAMEMAIN:\n          this.game_stage.showGameMainStage();\n          break;\n\n        default:\n          break;\n      }\n    });\n  }\n\n  initController() {\n    this.game_stage.initMainStage({\n      showGameOverStage: () => this.game_model.setStage(common["d" /* STAGEGROUP */].GAMEOVER)\n    });\n    this.game_stage.initOverStage({\n      restartGame: () => this.game_stage.restartGame(),\n      getScore: () => this.game_stage.getScore()\n    });\n    this.game_model.setStage(common["d" /* STAGEGROUP */].GAMEMAIN); // setTimeout(()=>{\n    //     this.game_model.setStage(STAGEGROUP.GAMEOVER)\n    // },3000)\n  }\n\n}\n\n/* harmony default export */ var controller = (new controller_GameController());\n// CONCATENATED MODULE: ./src/game/index.js\n\n\nlet app = document.getElementById("app");\nlet game_canvas = document.createElement("canvas");\nlet game_width = app.clientWidth,\n    game_height = app.clientHeight;\nconst game_aspect = game_height / game_width;\ngame_canvas.width = game_width;\ngame_canvas.height = game_height;\napp.append(game_canvas);\ncommon["f" /* common */].canvas = game_canvas;\ncommon["f" /* common */].width = game_width;\ncommon["f" /* common */].height = game_height;\ncommon["f" /* common */].aspect = game_aspect;\n\nclass game_Game {\n  constructor() {}\n\n  init() {\n    controller.initController();\n  }\n\n}\n\n/* harmony default export */ var game = (new game_Game());\n// CONCATENATED MODULE: ./src/main.js\n\n\nclass main_Main {\n  constructor() {}\n\n  static init() {\n    game.init();\n  }\n\n}\n\n/* harmony default export */ var main = (main_Main);\n// CONCATENATED MODULE: ./app.js\n\n\n!function () {\n  main.init();\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///7\n')}]);